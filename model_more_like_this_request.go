/*
NewsCatcher-V3 Production API

<img src='https://uploads-ssl.webflow.com/6429857b17973b636c2195c5/646c6f1eb774ff2f2997bec5_newscatcher_.svg' width='286' height='35' /> <br>  <br>Visit our website  <a href='https://newscatcherapi.com'>https://newscatcherapi.com</a>

API version: Beta-3.0.0
Contact: maksym@newscatcherapi.com
*/

// Code generated by Konfig (https://konfigthis.com); DO NOT EDIT.

package newscatcherapi

import (
	"encoding/json"
)

// MoreLikeThisRequest struct for MoreLikeThisRequest
type MoreLikeThisRequest struct {
	Q string `json:"q"`
	SearchIn *string `json:"search_in,omitempty"`
	IncludeSimilarDocuments *bool `json:"include_similar_documents,omitempty"`
	SimilarDocumentsNumber *int32 `json:"similar_documents_number,omitempty"`
	SimilarDocumentsFields *string `json:"similar_documents_fields,omitempty"`
	PredefinedSources *string `json:"predefined_sources,omitempty"`
	Sources *string `json:"sources,omitempty"`
	NotSources *string `json:"not_sources,omitempty"`
	Lang *string `json:"lang,omitempty"`
	NotLang *string `json:"not_lang,omitempty"`
	Countries *string `json:"countries,omitempty"`
	NotCountries *string `json:"not_countries,omitempty"`
	From *From `json:"from_,omitempty"`
	To *To `json:"to_,omitempty"`
	ByParseDate *bool `json:"by_parse_date,omitempty"`
	PublishedDatePrecision *string `json:"published_date_precision,omitempty"`
	SortBy *string `json:"sort_by,omitempty"`
	RankedOnly *string `json:"ranked_only,omitempty"`
	FromRank *int32 `json:"from_rank,omitempty"`
	ToRank *int32 `json:"to_rank,omitempty"`
	IsHeadline *bool `json:"is_headline,omitempty"`
	IsPaidContent *bool `json:"is_paid_content,omitempty"`
	ParentUrl *string `json:"parent_url,omitempty"`
	AllLinks *string `json:"all_links,omitempty"`
	AllDomainLinks *string `json:"all_domain_links,omitempty"`
	WordCountMin *int32 `json:"word_count_min,omitempty"`
	WordCountMax *int32 `json:"word_count_max,omitempty"`
	Page *int32 `json:"page,omitempty"`
	PageSize *int32 `json:"page_size,omitempty"`
	IncludeNlpData *bool `json:"include_nlp_data,omitempty"`
	HasNlp *bool `json:"has_nlp,omitempty"`
	Theme *string `json:"theme,omitempty"`
	NerName *string `json:"ner_name,omitempty"`
	TitleSentimentMin *float32 `json:"title_sentiment_min,omitempty"`
	TitleSentimentMax *float32 `json:"title_sentiment_max,omitempty"`
	ContentSentimentMin *float32 `json:"content_sentiment_min,omitempty"`
	ContentSentimentMax *float32 `json:"content_sentiment_max,omitempty"`
}

// NewMoreLikeThisRequest instantiates a new MoreLikeThisRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMoreLikeThisRequest(q string) *MoreLikeThisRequest {
	this := MoreLikeThisRequest{}
	this.Q = q
	var searchIn string = "title_content"
	this.SearchIn = &searchIn
	var includeSimilarDocuments bool = false
	this.IncludeSimilarDocuments = &includeSimilarDocuments
	var similarDocumentsNumber int32 = 5
	this.SimilarDocumentsNumber = &similarDocumentsNumber
	var similarDocumentsFields string = "title,content"
	this.SimilarDocumentsFields = &similarDocumentsFields
	var byParseDate bool = false
	this.ByParseDate = &byParseDate
	var sortBy string = "relevancy"
	this.SortBy = &sortBy
	var page int32 = 1
	this.Page = &page
	var pageSize int32 = 100
	this.PageSize = &pageSize
	return &this
}

// NewMoreLikeThisRequestWithDefaults instantiates a new MoreLikeThisRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMoreLikeThisRequestWithDefaults() *MoreLikeThisRequest {
	this := MoreLikeThisRequest{}
	var searchIn string = "title_content"
	this.SearchIn = &searchIn
	var includeSimilarDocuments bool = false
	this.IncludeSimilarDocuments = &includeSimilarDocuments
	var similarDocumentsNumber int32 = 5
	this.SimilarDocumentsNumber = &similarDocumentsNumber
	var similarDocumentsFields string = "title,content"
	this.SimilarDocumentsFields = &similarDocumentsFields
	var byParseDate bool = false
	this.ByParseDate = &byParseDate
	var sortBy string = "relevancy"
	this.SortBy = &sortBy
	var page int32 = 1
	this.Page = &page
	var pageSize int32 = 100
	this.PageSize = &pageSize
	return &this
}

// GetQ returns the Q field value
func (o *MoreLikeThisRequest) GetQ() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Q
}

// GetQOk returns a tuple with the Q field value
// and a boolean to check if the value has been set.
func (o *MoreLikeThisRequest) GetQOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Q, true
}

// SetQ sets field value
func (o *MoreLikeThisRequest) SetQ(v string) {
	o.Q = v
}

// GetSearchIn returns the SearchIn field value if set, zero value otherwise.
func (o *MoreLikeThisRequest) GetSearchIn() string {
	if o == nil || isNil(o.SearchIn) {
		var ret string
		return ret
	}
	return *o.SearchIn
}

// GetSearchInOk returns a tuple with the SearchIn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MoreLikeThisRequest) GetSearchInOk() (*string, bool) {
	if o == nil || isNil(o.SearchIn) {
    return nil, false
	}
	return o.SearchIn, true
}

// HasSearchIn returns a boolean if a field has been set.
func (o *MoreLikeThisRequest) HasSearchIn() bool {
	if o != nil && !isNil(o.SearchIn) {
		return true
	}

	return false
}

// SetSearchIn gets a reference to the given string and assigns it to the SearchIn field.
func (o *MoreLikeThisRequest) SetSearchIn(v string) {
	o.SearchIn = &v
}

// GetIncludeSimilarDocuments returns the IncludeSimilarDocuments field value if set, zero value otherwise.
func (o *MoreLikeThisRequest) GetIncludeSimilarDocuments() bool {
	if o == nil || isNil(o.IncludeSimilarDocuments) {
		var ret bool
		return ret
	}
	return *o.IncludeSimilarDocuments
}

// GetIncludeSimilarDocumentsOk returns a tuple with the IncludeSimilarDocuments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MoreLikeThisRequest) GetIncludeSimilarDocumentsOk() (*bool, bool) {
	if o == nil || isNil(o.IncludeSimilarDocuments) {
    return nil, false
	}
	return o.IncludeSimilarDocuments, true
}

// HasIncludeSimilarDocuments returns a boolean if a field has been set.
func (o *MoreLikeThisRequest) HasIncludeSimilarDocuments() bool {
	if o != nil && !isNil(o.IncludeSimilarDocuments) {
		return true
	}

	return false
}

// SetIncludeSimilarDocuments gets a reference to the given bool and assigns it to the IncludeSimilarDocuments field.
func (o *MoreLikeThisRequest) SetIncludeSimilarDocuments(v bool) {
	o.IncludeSimilarDocuments = &v
}

// GetSimilarDocumentsNumber returns the SimilarDocumentsNumber field value if set, zero value otherwise.
func (o *MoreLikeThisRequest) GetSimilarDocumentsNumber() int32 {
	if o == nil || isNil(o.SimilarDocumentsNumber) {
		var ret int32
		return ret
	}
	return *o.SimilarDocumentsNumber
}

// GetSimilarDocumentsNumberOk returns a tuple with the SimilarDocumentsNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MoreLikeThisRequest) GetSimilarDocumentsNumberOk() (*int32, bool) {
	if o == nil || isNil(o.SimilarDocumentsNumber) {
    return nil, false
	}
	return o.SimilarDocumentsNumber, true
}

// HasSimilarDocumentsNumber returns a boolean if a field has been set.
func (o *MoreLikeThisRequest) HasSimilarDocumentsNumber() bool {
	if o != nil && !isNil(o.SimilarDocumentsNumber) {
		return true
	}

	return false
}

// SetSimilarDocumentsNumber gets a reference to the given int32 and assigns it to the SimilarDocumentsNumber field.
func (o *MoreLikeThisRequest) SetSimilarDocumentsNumber(v int32) {
	o.SimilarDocumentsNumber = &v
}

// GetSimilarDocumentsFields returns the SimilarDocumentsFields field value if set, zero value otherwise.
func (o *MoreLikeThisRequest) GetSimilarDocumentsFields() string {
	if o == nil || isNil(o.SimilarDocumentsFields) {
		var ret string
		return ret
	}
	return *o.SimilarDocumentsFields
}

// GetSimilarDocumentsFieldsOk returns a tuple with the SimilarDocumentsFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MoreLikeThisRequest) GetSimilarDocumentsFieldsOk() (*string, bool) {
	if o == nil || isNil(o.SimilarDocumentsFields) {
    return nil, false
	}
	return o.SimilarDocumentsFields, true
}

// HasSimilarDocumentsFields returns a boolean if a field has been set.
func (o *MoreLikeThisRequest) HasSimilarDocumentsFields() bool {
	if o != nil && !isNil(o.SimilarDocumentsFields) {
		return true
	}

	return false
}

// SetSimilarDocumentsFields gets a reference to the given string and assigns it to the SimilarDocumentsFields field.
func (o *MoreLikeThisRequest) SetSimilarDocumentsFields(v string) {
	o.SimilarDocumentsFields = &v
}

// GetPredefinedSources returns the PredefinedSources field value if set, zero value otherwise.
func (o *MoreLikeThisRequest) GetPredefinedSources() string {
	if o == nil || isNil(o.PredefinedSources) {
		var ret string
		return ret
	}
	return *o.PredefinedSources
}

// GetPredefinedSourcesOk returns a tuple with the PredefinedSources field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MoreLikeThisRequest) GetPredefinedSourcesOk() (*string, bool) {
	if o == nil || isNil(o.PredefinedSources) {
    return nil, false
	}
	return o.PredefinedSources, true
}

// HasPredefinedSources returns a boolean if a field has been set.
func (o *MoreLikeThisRequest) HasPredefinedSources() bool {
	if o != nil && !isNil(o.PredefinedSources) {
		return true
	}

	return false
}

// SetPredefinedSources gets a reference to the given string and assigns it to the PredefinedSources field.
func (o *MoreLikeThisRequest) SetPredefinedSources(v string) {
	o.PredefinedSources = &v
}

// GetSources returns the Sources field value if set, zero value otherwise.
func (o *MoreLikeThisRequest) GetSources() string {
	if o == nil || isNil(o.Sources) {
		var ret string
		return ret
	}
	return *o.Sources
}

// GetSourcesOk returns a tuple with the Sources field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MoreLikeThisRequest) GetSourcesOk() (*string, bool) {
	if o == nil || isNil(o.Sources) {
    return nil, false
	}
	return o.Sources, true
}

// HasSources returns a boolean if a field has been set.
func (o *MoreLikeThisRequest) HasSources() bool {
	if o != nil && !isNil(o.Sources) {
		return true
	}

	return false
}

// SetSources gets a reference to the given string and assigns it to the Sources field.
func (o *MoreLikeThisRequest) SetSources(v string) {
	o.Sources = &v
}

// GetNotSources returns the NotSources field value if set, zero value otherwise.
func (o *MoreLikeThisRequest) GetNotSources() string {
	if o == nil || isNil(o.NotSources) {
		var ret string
		return ret
	}
	return *o.NotSources
}

// GetNotSourcesOk returns a tuple with the NotSources field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MoreLikeThisRequest) GetNotSourcesOk() (*string, bool) {
	if o == nil || isNil(o.NotSources) {
    return nil, false
	}
	return o.NotSources, true
}

// HasNotSources returns a boolean if a field has been set.
func (o *MoreLikeThisRequest) HasNotSources() bool {
	if o != nil && !isNil(o.NotSources) {
		return true
	}

	return false
}

// SetNotSources gets a reference to the given string and assigns it to the NotSources field.
func (o *MoreLikeThisRequest) SetNotSources(v string) {
	o.NotSources = &v
}

// GetLang returns the Lang field value if set, zero value otherwise.
func (o *MoreLikeThisRequest) GetLang() string {
	if o == nil || isNil(o.Lang) {
		var ret string
		return ret
	}
	return *o.Lang
}

// GetLangOk returns a tuple with the Lang field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MoreLikeThisRequest) GetLangOk() (*string, bool) {
	if o == nil || isNil(o.Lang) {
    return nil, false
	}
	return o.Lang, true
}

// HasLang returns a boolean if a field has been set.
func (o *MoreLikeThisRequest) HasLang() bool {
	if o != nil && !isNil(o.Lang) {
		return true
	}

	return false
}

// SetLang gets a reference to the given string and assigns it to the Lang field.
func (o *MoreLikeThisRequest) SetLang(v string) {
	o.Lang = &v
}

// GetNotLang returns the NotLang field value if set, zero value otherwise.
func (o *MoreLikeThisRequest) GetNotLang() string {
	if o == nil || isNil(o.NotLang) {
		var ret string
		return ret
	}
	return *o.NotLang
}

// GetNotLangOk returns a tuple with the NotLang field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MoreLikeThisRequest) GetNotLangOk() (*string, bool) {
	if o == nil || isNil(o.NotLang) {
    return nil, false
	}
	return o.NotLang, true
}

// HasNotLang returns a boolean if a field has been set.
func (o *MoreLikeThisRequest) HasNotLang() bool {
	if o != nil && !isNil(o.NotLang) {
		return true
	}

	return false
}

// SetNotLang gets a reference to the given string and assigns it to the NotLang field.
func (o *MoreLikeThisRequest) SetNotLang(v string) {
	o.NotLang = &v
}

// GetCountries returns the Countries field value if set, zero value otherwise.
func (o *MoreLikeThisRequest) GetCountries() string {
	if o == nil || isNil(o.Countries) {
		var ret string
		return ret
	}
	return *o.Countries
}

// GetCountriesOk returns a tuple with the Countries field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MoreLikeThisRequest) GetCountriesOk() (*string, bool) {
	if o == nil || isNil(o.Countries) {
    return nil, false
	}
	return o.Countries, true
}

// HasCountries returns a boolean if a field has been set.
func (o *MoreLikeThisRequest) HasCountries() bool {
	if o != nil && !isNil(o.Countries) {
		return true
	}

	return false
}

// SetCountries gets a reference to the given string and assigns it to the Countries field.
func (o *MoreLikeThisRequest) SetCountries(v string) {
	o.Countries = &v
}

// GetNotCountries returns the NotCountries field value if set, zero value otherwise.
func (o *MoreLikeThisRequest) GetNotCountries() string {
	if o == nil || isNil(o.NotCountries) {
		var ret string
		return ret
	}
	return *o.NotCountries
}

// GetNotCountriesOk returns a tuple with the NotCountries field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MoreLikeThisRequest) GetNotCountriesOk() (*string, bool) {
	if o == nil || isNil(o.NotCountries) {
    return nil, false
	}
	return o.NotCountries, true
}

// HasNotCountries returns a boolean if a field has been set.
func (o *MoreLikeThisRequest) HasNotCountries() bool {
	if o != nil && !isNil(o.NotCountries) {
		return true
	}

	return false
}

// SetNotCountries gets a reference to the given string and assigns it to the NotCountries field.
func (o *MoreLikeThisRequest) SetNotCountries(v string) {
	o.NotCountries = &v
}

// GetFrom returns the From field value if set, zero value otherwise.
func (o *MoreLikeThisRequest) GetFrom() From {
	if o == nil || isNil(o.From) {
		var ret From
		return ret
	}
	return *o.From
}

// GetFromOk returns a tuple with the From field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MoreLikeThisRequest) GetFromOk() (*From, bool) {
	if o == nil || isNil(o.From) {
    return nil, false
	}
	return o.From, true
}

// HasFrom returns a boolean if a field has been set.
func (o *MoreLikeThisRequest) HasFrom() bool {
	if o != nil && !isNil(o.From) {
		return true
	}

	return false
}

// SetFrom gets a reference to the given From and assigns it to the From field.
func (o *MoreLikeThisRequest) SetFrom(v From) {
	o.From = &v
}

// GetTo returns the To field value if set, zero value otherwise.
func (o *MoreLikeThisRequest) GetTo() To {
	if o == nil || isNil(o.To) {
		var ret To
		return ret
	}
	return *o.To
}

// GetToOk returns a tuple with the To field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MoreLikeThisRequest) GetToOk() (*To, bool) {
	if o == nil || isNil(o.To) {
    return nil, false
	}
	return o.To, true
}

// HasTo returns a boolean if a field has been set.
func (o *MoreLikeThisRequest) HasTo() bool {
	if o != nil && !isNil(o.To) {
		return true
	}

	return false
}

// SetTo gets a reference to the given To and assigns it to the To field.
func (o *MoreLikeThisRequest) SetTo(v To) {
	o.To = &v
}

// GetByParseDate returns the ByParseDate field value if set, zero value otherwise.
func (o *MoreLikeThisRequest) GetByParseDate() bool {
	if o == nil || isNil(o.ByParseDate) {
		var ret bool
		return ret
	}
	return *o.ByParseDate
}

// GetByParseDateOk returns a tuple with the ByParseDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MoreLikeThisRequest) GetByParseDateOk() (*bool, bool) {
	if o == nil || isNil(o.ByParseDate) {
    return nil, false
	}
	return o.ByParseDate, true
}

// HasByParseDate returns a boolean if a field has been set.
func (o *MoreLikeThisRequest) HasByParseDate() bool {
	if o != nil && !isNil(o.ByParseDate) {
		return true
	}

	return false
}

// SetByParseDate gets a reference to the given bool and assigns it to the ByParseDate field.
func (o *MoreLikeThisRequest) SetByParseDate(v bool) {
	o.ByParseDate = &v
}

// GetPublishedDatePrecision returns the PublishedDatePrecision field value if set, zero value otherwise.
func (o *MoreLikeThisRequest) GetPublishedDatePrecision() string {
	if o == nil || isNil(o.PublishedDatePrecision) {
		var ret string
		return ret
	}
	return *o.PublishedDatePrecision
}

// GetPublishedDatePrecisionOk returns a tuple with the PublishedDatePrecision field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MoreLikeThisRequest) GetPublishedDatePrecisionOk() (*string, bool) {
	if o == nil || isNil(o.PublishedDatePrecision) {
    return nil, false
	}
	return o.PublishedDatePrecision, true
}

// HasPublishedDatePrecision returns a boolean if a field has been set.
func (o *MoreLikeThisRequest) HasPublishedDatePrecision() bool {
	if o != nil && !isNil(o.PublishedDatePrecision) {
		return true
	}

	return false
}

// SetPublishedDatePrecision gets a reference to the given string and assigns it to the PublishedDatePrecision field.
func (o *MoreLikeThisRequest) SetPublishedDatePrecision(v string) {
	o.PublishedDatePrecision = &v
}

// GetSortBy returns the SortBy field value if set, zero value otherwise.
func (o *MoreLikeThisRequest) GetSortBy() string {
	if o == nil || isNil(o.SortBy) {
		var ret string
		return ret
	}
	return *o.SortBy
}

// GetSortByOk returns a tuple with the SortBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MoreLikeThisRequest) GetSortByOk() (*string, bool) {
	if o == nil || isNil(o.SortBy) {
    return nil, false
	}
	return o.SortBy, true
}

// HasSortBy returns a boolean if a field has been set.
func (o *MoreLikeThisRequest) HasSortBy() bool {
	if o != nil && !isNil(o.SortBy) {
		return true
	}

	return false
}

// SetSortBy gets a reference to the given string and assigns it to the SortBy field.
func (o *MoreLikeThisRequest) SetSortBy(v string) {
	o.SortBy = &v
}

// GetRankedOnly returns the RankedOnly field value if set, zero value otherwise.
func (o *MoreLikeThisRequest) GetRankedOnly() string {
	if o == nil || isNil(o.RankedOnly) {
		var ret string
		return ret
	}
	return *o.RankedOnly
}

// GetRankedOnlyOk returns a tuple with the RankedOnly field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MoreLikeThisRequest) GetRankedOnlyOk() (*string, bool) {
	if o == nil || isNil(o.RankedOnly) {
    return nil, false
	}
	return o.RankedOnly, true
}

// HasRankedOnly returns a boolean if a field has been set.
func (o *MoreLikeThisRequest) HasRankedOnly() bool {
	if o != nil && !isNil(o.RankedOnly) {
		return true
	}

	return false
}

// SetRankedOnly gets a reference to the given string and assigns it to the RankedOnly field.
func (o *MoreLikeThisRequest) SetRankedOnly(v string) {
	o.RankedOnly = &v
}

// GetFromRank returns the FromRank field value if set, zero value otherwise.
func (o *MoreLikeThisRequest) GetFromRank() int32 {
	if o == nil || isNil(o.FromRank) {
		var ret int32
		return ret
	}
	return *o.FromRank
}

// GetFromRankOk returns a tuple with the FromRank field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MoreLikeThisRequest) GetFromRankOk() (*int32, bool) {
	if o == nil || isNil(o.FromRank) {
    return nil, false
	}
	return o.FromRank, true
}

// HasFromRank returns a boolean if a field has been set.
func (o *MoreLikeThisRequest) HasFromRank() bool {
	if o != nil && !isNil(o.FromRank) {
		return true
	}

	return false
}

// SetFromRank gets a reference to the given int32 and assigns it to the FromRank field.
func (o *MoreLikeThisRequest) SetFromRank(v int32) {
	o.FromRank = &v
}

// GetToRank returns the ToRank field value if set, zero value otherwise.
func (o *MoreLikeThisRequest) GetToRank() int32 {
	if o == nil || isNil(o.ToRank) {
		var ret int32
		return ret
	}
	return *o.ToRank
}

// GetToRankOk returns a tuple with the ToRank field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MoreLikeThisRequest) GetToRankOk() (*int32, bool) {
	if o == nil || isNil(o.ToRank) {
    return nil, false
	}
	return o.ToRank, true
}

// HasToRank returns a boolean if a field has been set.
func (o *MoreLikeThisRequest) HasToRank() bool {
	if o != nil && !isNil(o.ToRank) {
		return true
	}

	return false
}

// SetToRank gets a reference to the given int32 and assigns it to the ToRank field.
func (o *MoreLikeThisRequest) SetToRank(v int32) {
	o.ToRank = &v
}

// GetIsHeadline returns the IsHeadline field value if set, zero value otherwise.
func (o *MoreLikeThisRequest) GetIsHeadline() bool {
	if o == nil || isNil(o.IsHeadline) {
		var ret bool
		return ret
	}
	return *o.IsHeadline
}

// GetIsHeadlineOk returns a tuple with the IsHeadline field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MoreLikeThisRequest) GetIsHeadlineOk() (*bool, bool) {
	if o == nil || isNil(o.IsHeadline) {
    return nil, false
	}
	return o.IsHeadline, true
}

// HasIsHeadline returns a boolean if a field has been set.
func (o *MoreLikeThisRequest) HasIsHeadline() bool {
	if o != nil && !isNil(o.IsHeadline) {
		return true
	}

	return false
}

// SetIsHeadline gets a reference to the given bool and assigns it to the IsHeadline field.
func (o *MoreLikeThisRequest) SetIsHeadline(v bool) {
	o.IsHeadline = &v
}

// GetIsPaidContent returns the IsPaidContent field value if set, zero value otherwise.
func (o *MoreLikeThisRequest) GetIsPaidContent() bool {
	if o == nil || isNil(o.IsPaidContent) {
		var ret bool
		return ret
	}
	return *o.IsPaidContent
}

// GetIsPaidContentOk returns a tuple with the IsPaidContent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MoreLikeThisRequest) GetIsPaidContentOk() (*bool, bool) {
	if o == nil || isNil(o.IsPaidContent) {
    return nil, false
	}
	return o.IsPaidContent, true
}

// HasIsPaidContent returns a boolean if a field has been set.
func (o *MoreLikeThisRequest) HasIsPaidContent() bool {
	if o != nil && !isNil(o.IsPaidContent) {
		return true
	}

	return false
}

// SetIsPaidContent gets a reference to the given bool and assigns it to the IsPaidContent field.
func (o *MoreLikeThisRequest) SetIsPaidContent(v bool) {
	o.IsPaidContent = &v
}

// GetParentUrl returns the ParentUrl field value if set, zero value otherwise.
func (o *MoreLikeThisRequest) GetParentUrl() string {
	if o == nil || isNil(o.ParentUrl) {
		var ret string
		return ret
	}
	return *o.ParentUrl
}

// GetParentUrlOk returns a tuple with the ParentUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MoreLikeThisRequest) GetParentUrlOk() (*string, bool) {
	if o == nil || isNil(o.ParentUrl) {
    return nil, false
	}
	return o.ParentUrl, true
}

// HasParentUrl returns a boolean if a field has been set.
func (o *MoreLikeThisRequest) HasParentUrl() bool {
	if o != nil && !isNil(o.ParentUrl) {
		return true
	}

	return false
}

// SetParentUrl gets a reference to the given string and assigns it to the ParentUrl field.
func (o *MoreLikeThisRequest) SetParentUrl(v string) {
	o.ParentUrl = &v
}

// GetAllLinks returns the AllLinks field value if set, zero value otherwise.
func (o *MoreLikeThisRequest) GetAllLinks() string {
	if o == nil || isNil(o.AllLinks) {
		var ret string
		return ret
	}
	return *o.AllLinks
}

// GetAllLinksOk returns a tuple with the AllLinks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MoreLikeThisRequest) GetAllLinksOk() (*string, bool) {
	if o == nil || isNil(o.AllLinks) {
    return nil, false
	}
	return o.AllLinks, true
}

// HasAllLinks returns a boolean if a field has been set.
func (o *MoreLikeThisRequest) HasAllLinks() bool {
	if o != nil && !isNil(o.AllLinks) {
		return true
	}

	return false
}

// SetAllLinks gets a reference to the given string and assigns it to the AllLinks field.
func (o *MoreLikeThisRequest) SetAllLinks(v string) {
	o.AllLinks = &v
}

// GetAllDomainLinks returns the AllDomainLinks field value if set, zero value otherwise.
func (o *MoreLikeThisRequest) GetAllDomainLinks() string {
	if o == nil || isNil(o.AllDomainLinks) {
		var ret string
		return ret
	}
	return *o.AllDomainLinks
}

// GetAllDomainLinksOk returns a tuple with the AllDomainLinks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MoreLikeThisRequest) GetAllDomainLinksOk() (*string, bool) {
	if o == nil || isNil(o.AllDomainLinks) {
    return nil, false
	}
	return o.AllDomainLinks, true
}

// HasAllDomainLinks returns a boolean if a field has been set.
func (o *MoreLikeThisRequest) HasAllDomainLinks() bool {
	if o != nil && !isNil(o.AllDomainLinks) {
		return true
	}

	return false
}

// SetAllDomainLinks gets a reference to the given string and assigns it to the AllDomainLinks field.
func (o *MoreLikeThisRequest) SetAllDomainLinks(v string) {
	o.AllDomainLinks = &v
}

// GetWordCountMin returns the WordCountMin field value if set, zero value otherwise.
func (o *MoreLikeThisRequest) GetWordCountMin() int32 {
	if o == nil || isNil(o.WordCountMin) {
		var ret int32
		return ret
	}
	return *o.WordCountMin
}

// GetWordCountMinOk returns a tuple with the WordCountMin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MoreLikeThisRequest) GetWordCountMinOk() (*int32, bool) {
	if o == nil || isNil(o.WordCountMin) {
    return nil, false
	}
	return o.WordCountMin, true
}

// HasWordCountMin returns a boolean if a field has been set.
func (o *MoreLikeThisRequest) HasWordCountMin() bool {
	if o != nil && !isNil(o.WordCountMin) {
		return true
	}

	return false
}

// SetWordCountMin gets a reference to the given int32 and assigns it to the WordCountMin field.
func (o *MoreLikeThisRequest) SetWordCountMin(v int32) {
	o.WordCountMin = &v
}

// GetWordCountMax returns the WordCountMax field value if set, zero value otherwise.
func (o *MoreLikeThisRequest) GetWordCountMax() int32 {
	if o == nil || isNil(o.WordCountMax) {
		var ret int32
		return ret
	}
	return *o.WordCountMax
}

// GetWordCountMaxOk returns a tuple with the WordCountMax field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MoreLikeThisRequest) GetWordCountMaxOk() (*int32, bool) {
	if o == nil || isNil(o.WordCountMax) {
    return nil, false
	}
	return o.WordCountMax, true
}

// HasWordCountMax returns a boolean if a field has been set.
func (o *MoreLikeThisRequest) HasWordCountMax() bool {
	if o != nil && !isNil(o.WordCountMax) {
		return true
	}

	return false
}

// SetWordCountMax gets a reference to the given int32 and assigns it to the WordCountMax field.
func (o *MoreLikeThisRequest) SetWordCountMax(v int32) {
	o.WordCountMax = &v
}

// GetPage returns the Page field value if set, zero value otherwise.
func (o *MoreLikeThisRequest) GetPage() int32 {
	if o == nil || isNil(o.Page) {
		var ret int32
		return ret
	}
	return *o.Page
}

// GetPageOk returns a tuple with the Page field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MoreLikeThisRequest) GetPageOk() (*int32, bool) {
	if o == nil || isNil(o.Page) {
    return nil, false
	}
	return o.Page, true
}

// HasPage returns a boolean if a field has been set.
func (o *MoreLikeThisRequest) HasPage() bool {
	if o != nil && !isNil(o.Page) {
		return true
	}

	return false
}

// SetPage gets a reference to the given int32 and assigns it to the Page field.
func (o *MoreLikeThisRequest) SetPage(v int32) {
	o.Page = &v
}

// GetPageSize returns the PageSize field value if set, zero value otherwise.
func (o *MoreLikeThisRequest) GetPageSize() int32 {
	if o == nil || isNil(o.PageSize) {
		var ret int32
		return ret
	}
	return *o.PageSize
}

// GetPageSizeOk returns a tuple with the PageSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MoreLikeThisRequest) GetPageSizeOk() (*int32, bool) {
	if o == nil || isNil(o.PageSize) {
    return nil, false
	}
	return o.PageSize, true
}

// HasPageSize returns a boolean if a field has been set.
func (o *MoreLikeThisRequest) HasPageSize() bool {
	if o != nil && !isNil(o.PageSize) {
		return true
	}

	return false
}

// SetPageSize gets a reference to the given int32 and assigns it to the PageSize field.
func (o *MoreLikeThisRequest) SetPageSize(v int32) {
	o.PageSize = &v
}

// GetIncludeNlpData returns the IncludeNlpData field value if set, zero value otherwise.
func (o *MoreLikeThisRequest) GetIncludeNlpData() bool {
	if o == nil || isNil(o.IncludeNlpData) {
		var ret bool
		return ret
	}
	return *o.IncludeNlpData
}

// GetIncludeNlpDataOk returns a tuple with the IncludeNlpData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MoreLikeThisRequest) GetIncludeNlpDataOk() (*bool, bool) {
	if o == nil || isNil(o.IncludeNlpData) {
    return nil, false
	}
	return o.IncludeNlpData, true
}

// HasIncludeNlpData returns a boolean if a field has been set.
func (o *MoreLikeThisRequest) HasIncludeNlpData() bool {
	if o != nil && !isNil(o.IncludeNlpData) {
		return true
	}

	return false
}

// SetIncludeNlpData gets a reference to the given bool and assigns it to the IncludeNlpData field.
func (o *MoreLikeThisRequest) SetIncludeNlpData(v bool) {
	o.IncludeNlpData = &v
}

// GetHasNlp returns the HasNlp field value if set, zero value otherwise.
func (o *MoreLikeThisRequest) GetHasNlp() bool {
	if o == nil || isNil(o.HasNlp) {
		var ret bool
		return ret
	}
	return *o.HasNlp
}

// GetHasNlpOk returns a tuple with the HasNlp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MoreLikeThisRequest) GetHasNlpOk() (*bool, bool) {
	if o == nil || isNil(o.HasNlp) {
    return nil, false
	}
	return o.HasNlp, true
}

// HasHasNlp returns a boolean if a field has been set.
func (o *MoreLikeThisRequest) HasHasNlp() bool {
	if o != nil && !isNil(o.HasNlp) {
		return true
	}

	return false
}

// SetHasNlp gets a reference to the given bool and assigns it to the HasNlp field.
func (o *MoreLikeThisRequest) SetHasNlp(v bool) {
	o.HasNlp = &v
}

// GetTheme returns the Theme field value if set, zero value otherwise.
func (o *MoreLikeThisRequest) GetTheme() string {
	if o == nil || isNil(o.Theme) {
		var ret string
		return ret
	}
	return *o.Theme
}

// GetThemeOk returns a tuple with the Theme field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MoreLikeThisRequest) GetThemeOk() (*string, bool) {
	if o == nil || isNil(o.Theme) {
    return nil, false
	}
	return o.Theme, true
}

// HasTheme returns a boolean if a field has been set.
func (o *MoreLikeThisRequest) HasTheme() bool {
	if o != nil && !isNil(o.Theme) {
		return true
	}

	return false
}

// SetTheme gets a reference to the given string and assigns it to the Theme field.
func (o *MoreLikeThisRequest) SetTheme(v string) {
	o.Theme = &v
}

// GetNerName returns the NerName field value if set, zero value otherwise.
func (o *MoreLikeThisRequest) GetNerName() string {
	if o == nil || isNil(o.NerName) {
		var ret string
		return ret
	}
	return *o.NerName
}

// GetNerNameOk returns a tuple with the NerName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MoreLikeThisRequest) GetNerNameOk() (*string, bool) {
	if o == nil || isNil(o.NerName) {
    return nil, false
	}
	return o.NerName, true
}

// HasNerName returns a boolean if a field has been set.
func (o *MoreLikeThisRequest) HasNerName() bool {
	if o != nil && !isNil(o.NerName) {
		return true
	}

	return false
}

// SetNerName gets a reference to the given string and assigns it to the NerName field.
func (o *MoreLikeThisRequest) SetNerName(v string) {
	o.NerName = &v
}

// GetTitleSentimentMin returns the TitleSentimentMin field value if set, zero value otherwise.
func (o *MoreLikeThisRequest) GetTitleSentimentMin() float32 {
	if o == nil || isNil(o.TitleSentimentMin) {
		var ret float32
		return ret
	}
	return *o.TitleSentimentMin
}

// GetTitleSentimentMinOk returns a tuple with the TitleSentimentMin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MoreLikeThisRequest) GetTitleSentimentMinOk() (*float32, bool) {
	if o == nil || isNil(o.TitleSentimentMin) {
    return nil, false
	}
	return o.TitleSentimentMin, true
}

// HasTitleSentimentMin returns a boolean if a field has been set.
func (o *MoreLikeThisRequest) HasTitleSentimentMin() bool {
	if o != nil && !isNil(o.TitleSentimentMin) {
		return true
	}

	return false
}

// SetTitleSentimentMin gets a reference to the given float32 and assigns it to the TitleSentimentMin field.
func (o *MoreLikeThisRequest) SetTitleSentimentMin(v float32) {
	o.TitleSentimentMin = &v
}

// GetTitleSentimentMax returns the TitleSentimentMax field value if set, zero value otherwise.
func (o *MoreLikeThisRequest) GetTitleSentimentMax() float32 {
	if o == nil || isNil(o.TitleSentimentMax) {
		var ret float32
		return ret
	}
	return *o.TitleSentimentMax
}

// GetTitleSentimentMaxOk returns a tuple with the TitleSentimentMax field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MoreLikeThisRequest) GetTitleSentimentMaxOk() (*float32, bool) {
	if o == nil || isNil(o.TitleSentimentMax) {
    return nil, false
	}
	return o.TitleSentimentMax, true
}

// HasTitleSentimentMax returns a boolean if a field has been set.
func (o *MoreLikeThisRequest) HasTitleSentimentMax() bool {
	if o != nil && !isNil(o.TitleSentimentMax) {
		return true
	}

	return false
}

// SetTitleSentimentMax gets a reference to the given float32 and assigns it to the TitleSentimentMax field.
func (o *MoreLikeThisRequest) SetTitleSentimentMax(v float32) {
	o.TitleSentimentMax = &v
}

// GetContentSentimentMin returns the ContentSentimentMin field value if set, zero value otherwise.
func (o *MoreLikeThisRequest) GetContentSentimentMin() float32 {
	if o == nil || isNil(o.ContentSentimentMin) {
		var ret float32
		return ret
	}
	return *o.ContentSentimentMin
}

// GetContentSentimentMinOk returns a tuple with the ContentSentimentMin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MoreLikeThisRequest) GetContentSentimentMinOk() (*float32, bool) {
	if o == nil || isNil(o.ContentSentimentMin) {
    return nil, false
	}
	return o.ContentSentimentMin, true
}

// HasContentSentimentMin returns a boolean if a field has been set.
func (o *MoreLikeThisRequest) HasContentSentimentMin() bool {
	if o != nil && !isNil(o.ContentSentimentMin) {
		return true
	}

	return false
}

// SetContentSentimentMin gets a reference to the given float32 and assigns it to the ContentSentimentMin field.
func (o *MoreLikeThisRequest) SetContentSentimentMin(v float32) {
	o.ContentSentimentMin = &v
}

// GetContentSentimentMax returns the ContentSentimentMax field value if set, zero value otherwise.
func (o *MoreLikeThisRequest) GetContentSentimentMax() float32 {
	if o == nil || isNil(o.ContentSentimentMax) {
		var ret float32
		return ret
	}
	return *o.ContentSentimentMax
}

// GetContentSentimentMaxOk returns a tuple with the ContentSentimentMax field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MoreLikeThisRequest) GetContentSentimentMaxOk() (*float32, bool) {
	if o == nil || isNil(o.ContentSentimentMax) {
    return nil, false
	}
	return o.ContentSentimentMax, true
}

// HasContentSentimentMax returns a boolean if a field has been set.
func (o *MoreLikeThisRequest) HasContentSentimentMax() bool {
	if o != nil && !isNil(o.ContentSentimentMax) {
		return true
	}

	return false
}

// SetContentSentimentMax gets a reference to the given float32 and assigns it to the ContentSentimentMax field.
func (o *MoreLikeThisRequest) SetContentSentimentMax(v float32) {
	o.ContentSentimentMax = &v
}

func (o MoreLikeThisRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["q"] = o.Q
	}
	if !isNil(o.SearchIn) {
		toSerialize["search_in"] = o.SearchIn
	}
	if !isNil(o.IncludeSimilarDocuments) {
		toSerialize["include_similar_documents"] = o.IncludeSimilarDocuments
	}
	if !isNil(o.SimilarDocumentsNumber) {
		toSerialize["similar_documents_number"] = o.SimilarDocumentsNumber
	}
	if !isNil(o.SimilarDocumentsFields) {
		toSerialize["similar_documents_fields"] = o.SimilarDocumentsFields
	}
	if !isNil(o.PredefinedSources) {
		toSerialize["predefined_sources"] = o.PredefinedSources
	}
	if !isNil(o.Sources) {
		toSerialize["sources"] = o.Sources
	}
	if !isNil(o.NotSources) {
		toSerialize["not_sources"] = o.NotSources
	}
	if !isNil(o.Lang) {
		toSerialize["lang"] = o.Lang
	}
	if !isNil(o.NotLang) {
		toSerialize["not_lang"] = o.NotLang
	}
	if !isNil(o.Countries) {
		toSerialize["countries"] = o.Countries
	}
	if !isNil(o.NotCountries) {
		toSerialize["not_countries"] = o.NotCountries
	}
	if !isNil(o.From) {
		toSerialize["from_"] = o.From
	}
	if !isNil(o.To) {
		toSerialize["to_"] = o.To
	}
	if !isNil(o.ByParseDate) {
		toSerialize["by_parse_date"] = o.ByParseDate
	}
	if !isNil(o.PublishedDatePrecision) {
		toSerialize["published_date_precision"] = o.PublishedDatePrecision
	}
	if !isNil(o.SortBy) {
		toSerialize["sort_by"] = o.SortBy
	}
	if !isNil(o.RankedOnly) {
		toSerialize["ranked_only"] = o.RankedOnly
	}
	if !isNil(o.FromRank) {
		toSerialize["from_rank"] = o.FromRank
	}
	if !isNil(o.ToRank) {
		toSerialize["to_rank"] = o.ToRank
	}
	if !isNil(o.IsHeadline) {
		toSerialize["is_headline"] = o.IsHeadline
	}
	if !isNil(o.IsPaidContent) {
		toSerialize["is_paid_content"] = o.IsPaidContent
	}
	if !isNil(o.ParentUrl) {
		toSerialize["parent_url"] = o.ParentUrl
	}
	if !isNil(o.AllLinks) {
		toSerialize["all_links"] = o.AllLinks
	}
	if !isNil(o.AllDomainLinks) {
		toSerialize["all_domain_links"] = o.AllDomainLinks
	}
	if !isNil(o.WordCountMin) {
		toSerialize["word_count_min"] = o.WordCountMin
	}
	if !isNil(o.WordCountMax) {
		toSerialize["word_count_max"] = o.WordCountMax
	}
	if !isNil(o.Page) {
		toSerialize["page"] = o.Page
	}
	if !isNil(o.PageSize) {
		toSerialize["page_size"] = o.PageSize
	}
	if !isNil(o.IncludeNlpData) {
		toSerialize["include_nlp_data"] = o.IncludeNlpData
	}
	if !isNil(o.HasNlp) {
		toSerialize["has_nlp"] = o.HasNlp
	}
	if !isNil(o.Theme) {
		toSerialize["theme"] = o.Theme
	}
	if !isNil(o.NerName) {
		toSerialize["ner_name"] = o.NerName
	}
	if !isNil(o.TitleSentimentMin) {
		toSerialize["title_sentiment_min"] = o.TitleSentimentMin
	}
	if !isNil(o.TitleSentimentMax) {
		toSerialize["title_sentiment_max"] = o.TitleSentimentMax
	}
	if !isNil(o.ContentSentimentMin) {
		toSerialize["content_sentiment_min"] = o.ContentSentimentMin
	}
	if !isNil(o.ContentSentimentMax) {
		toSerialize["content_sentiment_max"] = o.ContentSentimentMax
	}
	return json.Marshal(toSerialize)
}

type NullableMoreLikeThisRequest struct {
	value *MoreLikeThisRequest
	isSet bool
}

func (v NullableMoreLikeThisRequest) Get() *MoreLikeThisRequest {
	return v.value
}

func (v *NullableMoreLikeThisRequest) Set(val *MoreLikeThisRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableMoreLikeThisRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableMoreLikeThisRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMoreLikeThisRequest(val *MoreLikeThisRequest) *NullableMoreLikeThisRequest {
	return &NullableMoreLikeThisRequest{value: val, isSet: true}
}

func (v NullableMoreLikeThisRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMoreLikeThisRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


