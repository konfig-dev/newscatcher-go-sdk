/*
NewsCatcher-V3 Production API

<img src='https://uploads-ssl.webflow.com/6429857b17973b636c2195c5/646c6f1eb774ff2f2997bec5_newscatcher_.svg' width='286' height='35' /> <br>  <br>Visit our website  <a href='https://newscatcherapi.com'>https://newscatcherapi.com</a>

API version: 3.2.16
Contact: maksym@newscatcherapi.com
*/

// Code generated by Konfig (https://konfigthis.com); DO NOT EDIT.

package newscatcherapi

import (
	"encoding/json"
)

// AuthorSearchRequest Author search request DTO.
type AuthorSearchRequest struct {
	AuthorName string `json:"author_name"`
	NotAuthorName *string `json:"not_author_name,omitempty"`
	Sources interface{} `json:"sources,omitempty"`
	PredefinedSources interface{} `json:"predefined_sources,omitempty"`
	NotSources interface{} `json:"not_sources,omitempty"`
	Lang interface{} `json:"lang,omitempty"`
	NotLang interface{} `json:"not_lang,omitempty"`
	Countries interface{} `json:"countries,omitempty"`
	NotCountries interface{} `json:"not_countries,omitempty"`
	From *string `json:"from_,omitempty"`
	To *string `json:"to_,omitempty"`
	PublishedDatePrecision *string `json:"published_date_precision,omitempty"`
	ByParseDate *bool `json:"by_parse_date,omitempty"`
	SortBy *string `json:"sort_by,omitempty"`
	RankedOnly *string `json:"ranked_only,omitempty"`
	FromRank *int32 `json:"from_rank,omitempty"`
	ToRank *int32 `json:"to_rank,omitempty"`
	IsHeadline *bool `json:"is_headline,omitempty"`
	IsOpinion *bool `json:"is_opinion,omitempty"`
	IsPaidContent *bool `json:"is_paid_content,omitempty"`
	ParentUrl interface{} `json:"parent_url,omitempty"`
	AllLinks interface{} `json:"all_links,omitempty"`
	AllDomainLinks interface{} `json:"all_domain_links,omitempty"`
	WordCountMin *int32 `json:"word_count_min,omitempty"`
	WordCountMax *int32 `json:"word_count_max,omitempty"`
	Page *int32 `json:"page,omitempty"`
	PageSize *int32 `json:"page_size,omitempty"`
	IncludeNlpData *bool `json:"include_nlp_data,omitempty"`
	HasNlp *bool `json:"has_nlp,omitempty"`
	Theme *string `json:"theme,omitempty"`
	NotTheme *string `json:"not_theme,omitempty"`
	NerName *string `json:"ner_name,omitempty"`
	TitleSentimentMin *float32 `json:"title_sentiment_min,omitempty"`
	TitleSentimentMax *float32 `json:"title_sentiment_max,omitempty"`
	ContentSentimentMin *float32 `json:"content_sentiment_min,omitempty"`
	ContentSentimentMax *float32 `json:"content_sentiment_max,omitempty"`
	IptcTags interface{} `json:"iptc_tags,omitempty"`
	NotIptcTags interface{} `json:"not_iptc_tags,omitempty"`
	IabTags interface{} `json:"iab_tags,omitempty"`
	NotIabTags interface{} `json:"not_iab_tags,omitempty"`
}

// NewAuthorSearchRequest instantiates a new AuthorSearchRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuthorSearchRequest(authorName string) *AuthorSearchRequest {
	this := AuthorSearchRequest{}
	this.AuthorName = authorName
	var byParseDate bool = false
	this.ByParseDate = &byParseDate
	var sortBy string = "relevancy"
	this.SortBy = &sortBy
	var page int32 = 1
	this.Page = &page
	var pageSize int32 = 100
	this.PageSize = &pageSize
	return &this
}

// NewAuthorSearchRequestWithDefaults instantiates a new AuthorSearchRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuthorSearchRequestWithDefaults() *AuthorSearchRequest {
	this := AuthorSearchRequest{}
	var byParseDate bool = false
	this.ByParseDate = &byParseDate
	var sortBy string = "relevancy"
	this.SortBy = &sortBy
	var page int32 = 1
	this.Page = &page
	var pageSize int32 = 100
	this.PageSize = &pageSize
	return &this
}

// GetAuthorName returns the AuthorName field value
func (o *AuthorSearchRequest) GetAuthorName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AuthorName
}

// GetAuthorNameOk returns a tuple with the AuthorName field value
// and a boolean to check if the value has been set.
func (o *AuthorSearchRequest) GetAuthorNameOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.AuthorName, true
}

// SetAuthorName sets field value
func (o *AuthorSearchRequest) SetAuthorName(v string) {
	o.AuthorName = v
}

// GetNotAuthorName returns the NotAuthorName field value if set, zero value otherwise.
func (o *AuthorSearchRequest) GetNotAuthorName() string {
	if o == nil || isNil(o.NotAuthorName) {
		var ret string
		return ret
	}
	return *o.NotAuthorName
}

// GetNotAuthorNameOk returns a tuple with the NotAuthorName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthorSearchRequest) GetNotAuthorNameOk() (*string, bool) {
	if o == nil || isNil(o.NotAuthorName) {
    return nil, false
	}
	return o.NotAuthorName, true
}

// HasNotAuthorName returns a boolean if a field has been set.
func (o *AuthorSearchRequest) HasNotAuthorName() bool {
	if o != nil && !isNil(o.NotAuthorName) {
		return true
	}

	return false
}

// SetNotAuthorName gets a reference to the given string and assigns it to the NotAuthorName field.
func (o *AuthorSearchRequest) SetNotAuthorName(v string) {
	o.NotAuthorName = &v
}

// GetSources returns the Sources field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AuthorSearchRequest) GetSources() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Sources
}

// GetSourcesOk returns a tuple with the Sources field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AuthorSearchRequest) GetSourcesOk() (*interface{}, bool) {
	if o == nil || isNil(o.Sources) {
    return nil, false
	}
	return &o.Sources, true
}

// HasSources returns a boolean if a field has been set.
func (o *AuthorSearchRequest) HasSources() bool {
	if o != nil && isNil(o.Sources) {
		return true
	}

	return false
}

// SetSources gets a reference to the given interface{} and assigns it to the Sources field.
func (o *AuthorSearchRequest) SetSources(v interface{}) {
	o.Sources = v
}

// GetPredefinedSources returns the PredefinedSources field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AuthorSearchRequest) GetPredefinedSources() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.PredefinedSources
}

// GetPredefinedSourcesOk returns a tuple with the PredefinedSources field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AuthorSearchRequest) GetPredefinedSourcesOk() (*interface{}, bool) {
	if o == nil || isNil(o.PredefinedSources) {
    return nil, false
	}
	return &o.PredefinedSources, true
}

// HasPredefinedSources returns a boolean if a field has been set.
func (o *AuthorSearchRequest) HasPredefinedSources() bool {
	if o != nil && isNil(o.PredefinedSources) {
		return true
	}

	return false
}

// SetPredefinedSources gets a reference to the given interface{} and assigns it to the PredefinedSources field.
func (o *AuthorSearchRequest) SetPredefinedSources(v interface{}) {
	o.PredefinedSources = v
}

// GetNotSources returns the NotSources field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AuthorSearchRequest) GetNotSources() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.NotSources
}

// GetNotSourcesOk returns a tuple with the NotSources field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AuthorSearchRequest) GetNotSourcesOk() (*interface{}, bool) {
	if o == nil || isNil(o.NotSources) {
    return nil, false
	}
	return &o.NotSources, true
}

// HasNotSources returns a boolean if a field has been set.
func (o *AuthorSearchRequest) HasNotSources() bool {
	if o != nil && isNil(o.NotSources) {
		return true
	}

	return false
}

// SetNotSources gets a reference to the given interface{} and assigns it to the NotSources field.
func (o *AuthorSearchRequest) SetNotSources(v interface{}) {
	o.NotSources = v
}

// GetLang returns the Lang field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AuthorSearchRequest) GetLang() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Lang
}

// GetLangOk returns a tuple with the Lang field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AuthorSearchRequest) GetLangOk() (*interface{}, bool) {
	if o == nil || isNil(o.Lang) {
    return nil, false
	}
	return &o.Lang, true
}

// HasLang returns a boolean if a field has been set.
func (o *AuthorSearchRequest) HasLang() bool {
	if o != nil && isNil(o.Lang) {
		return true
	}

	return false
}

// SetLang gets a reference to the given interface{} and assigns it to the Lang field.
func (o *AuthorSearchRequest) SetLang(v interface{}) {
	o.Lang = v
}

// GetNotLang returns the NotLang field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AuthorSearchRequest) GetNotLang() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.NotLang
}

// GetNotLangOk returns a tuple with the NotLang field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AuthorSearchRequest) GetNotLangOk() (*interface{}, bool) {
	if o == nil || isNil(o.NotLang) {
    return nil, false
	}
	return &o.NotLang, true
}

// HasNotLang returns a boolean if a field has been set.
func (o *AuthorSearchRequest) HasNotLang() bool {
	if o != nil && isNil(o.NotLang) {
		return true
	}

	return false
}

// SetNotLang gets a reference to the given interface{} and assigns it to the NotLang field.
func (o *AuthorSearchRequest) SetNotLang(v interface{}) {
	o.NotLang = v
}

// GetCountries returns the Countries field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AuthorSearchRequest) GetCountries() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Countries
}

// GetCountriesOk returns a tuple with the Countries field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AuthorSearchRequest) GetCountriesOk() (*interface{}, bool) {
	if o == nil || isNil(o.Countries) {
    return nil, false
	}
	return &o.Countries, true
}

// HasCountries returns a boolean if a field has been set.
func (o *AuthorSearchRequest) HasCountries() bool {
	if o != nil && isNil(o.Countries) {
		return true
	}

	return false
}

// SetCountries gets a reference to the given interface{} and assigns it to the Countries field.
func (o *AuthorSearchRequest) SetCountries(v interface{}) {
	o.Countries = v
}

// GetNotCountries returns the NotCountries field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AuthorSearchRequest) GetNotCountries() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.NotCountries
}

// GetNotCountriesOk returns a tuple with the NotCountries field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AuthorSearchRequest) GetNotCountriesOk() (*interface{}, bool) {
	if o == nil || isNil(o.NotCountries) {
    return nil, false
	}
	return &o.NotCountries, true
}

// HasNotCountries returns a boolean if a field has been set.
func (o *AuthorSearchRequest) HasNotCountries() bool {
	if o != nil && isNil(o.NotCountries) {
		return true
	}

	return false
}

// SetNotCountries gets a reference to the given interface{} and assigns it to the NotCountries field.
func (o *AuthorSearchRequest) SetNotCountries(v interface{}) {
	o.NotCountries = v
}

// GetFrom returns the From field value if set, zero value otherwise.
func (o *AuthorSearchRequest) GetFrom() string {
	if o == nil || isNil(o.From) {
		var ret string
		return ret
	}
	return *o.From
}

// GetFromOk returns a tuple with the From field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthorSearchRequest) GetFromOk() (*string, bool) {
	if o == nil || isNil(o.From) {
    return nil, false
	}
	return o.From, true
}

// HasFrom returns a boolean if a field has been set.
func (o *AuthorSearchRequest) HasFrom() bool {
	if o != nil && !isNil(o.From) {
		return true
	}

	return false
}

// SetFrom gets a reference to the given string and assigns it to the From field.
func (o *AuthorSearchRequest) SetFrom(v string) {
	o.From = &v
}

// GetTo returns the To field value if set, zero value otherwise.
func (o *AuthorSearchRequest) GetTo() string {
	if o == nil || isNil(o.To) {
		var ret string
		return ret
	}
	return *o.To
}

// GetToOk returns a tuple with the To field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthorSearchRequest) GetToOk() (*string, bool) {
	if o == nil || isNil(o.To) {
    return nil, false
	}
	return o.To, true
}

// HasTo returns a boolean if a field has been set.
func (o *AuthorSearchRequest) HasTo() bool {
	if o != nil && !isNil(o.To) {
		return true
	}

	return false
}

// SetTo gets a reference to the given string and assigns it to the To field.
func (o *AuthorSearchRequest) SetTo(v string) {
	o.To = &v
}

// GetPublishedDatePrecision returns the PublishedDatePrecision field value if set, zero value otherwise.
func (o *AuthorSearchRequest) GetPublishedDatePrecision() string {
	if o == nil || isNil(o.PublishedDatePrecision) {
		var ret string
		return ret
	}
	return *o.PublishedDatePrecision
}

// GetPublishedDatePrecisionOk returns a tuple with the PublishedDatePrecision field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthorSearchRequest) GetPublishedDatePrecisionOk() (*string, bool) {
	if o == nil || isNil(o.PublishedDatePrecision) {
    return nil, false
	}
	return o.PublishedDatePrecision, true
}

// HasPublishedDatePrecision returns a boolean if a field has been set.
func (o *AuthorSearchRequest) HasPublishedDatePrecision() bool {
	if o != nil && !isNil(o.PublishedDatePrecision) {
		return true
	}

	return false
}

// SetPublishedDatePrecision gets a reference to the given string and assigns it to the PublishedDatePrecision field.
func (o *AuthorSearchRequest) SetPublishedDatePrecision(v string) {
	o.PublishedDatePrecision = &v
}

// GetByParseDate returns the ByParseDate field value if set, zero value otherwise.
func (o *AuthorSearchRequest) GetByParseDate() bool {
	if o == nil || isNil(o.ByParseDate) {
		var ret bool
		return ret
	}
	return *o.ByParseDate
}

// GetByParseDateOk returns a tuple with the ByParseDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthorSearchRequest) GetByParseDateOk() (*bool, bool) {
	if o == nil || isNil(o.ByParseDate) {
    return nil, false
	}
	return o.ByParseDate, true
}

// HasByParseDate returns a boolean if a field has been set.
func (o *AuthorSearchRequest) HasByParseDate() bool {
	if o != nil && !isNil(o.ByParseDate) {
		return true
	}

	return false
}

// SetByParseDate gets a reference to the given bool and assigns it to the ByParseDate field.
func (o *AuthorSearchRequest) SetByParseDate(v bool) {
	o.ByParseDate = &v
}

// GetSortBy returns the SortBy field value if set, zero value otherwise.
func (o *AuthorSearchRequest) GetSortBy() string {
	if o == nil || isNil(o.SortBy) {
		var ret string
		return ret
	}
	return *o.SortBy
}

// GetSortByOk returns a tuple with the SortBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthorSearchRequest) GetSortByOk() (*string, bool) {
	if o == nil || isNil(o.SortBy) {
    return nil, false
	}
	return o.SortBy, true
}

// HasSortBy returns a boolean if a field has been set.
func (o *AuthorSearchRequest) HasSortBy() bool {
	if o != nil && !isNil(o.SortBy) {
		return true
	}

	return false
}

// SetSortBy gets a reference to the given string and assigns it to the SortBy field.
func (o *AuthorSearchRequest) SetSortBy(v string) {
	o.SortBy = &v
}

// GetRankedOnly returns the RankedOnly field value if set, zero value otherwise.
func (o *AuthorSearchRequest) GetRankedOnly() string {
	if o == nil || isNil(o.RankedOnly) {
		var ret string
		return ret
	}
	return *o.RankedOnly
}

// GetRankedOnlyOk returns a tuple with the RankedOnly field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthorSearchRequest) GetRankedOnlyOk() (*string, bool) {
	if o == nil || isNil(o.RankedOnly) {
    return nil, false
	}
	return o.RankedOnly, true
}

// HasRankedOnly returns a boolean if a field has been set.
func (o *AuthorSearchRequest) HasRankedOnly() bool {
	if o != nil && !isNil(o.RankedOnly) {
		return true
	}

	return false
}

// SetRankedOnly gets a reference to the given string and assigns it to the RankedOnly field.
func (o *AuthorSearchRequest) SetRankedOnly(v string) {
	o.RankedOnly = &v
}

// GetFromRank returns the FromRank field value if set, zero value otherwise.
func (o *AuthorSearchRequest) GetFromRank() int32 {
	if o == nil || isNil(o.FromRank) {
		var ret int32
		return ret
	}
	return *o.FromRank
}

// GetFromRankOk returns a tuple with the FromRank field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthorSearchRequest) GetFromRankOk() (*int32, bool) {
	if o == nil || isNil(o.FromRank) {
    return nil, false
	}
	return o.FromRank, true
}

// HasFromRank returns a boolean if a field has been set.
func (o *AuthorSearchRequest) HasFromRank() bool {
	if o != nil && !isNil(o.FromRank) {
		return true
	}

	return false
}

// SetFromRank gets a reference to the given int32 and assigns it to the FromRank field.
func (o *AuthorSearchRequest) SetFromRank(v int32) {
	o.FromRank = &v
}

// GetToRank returns the ToRank field value if set, zero value otherwise.
func (o *AuthorSearchRequest) GetToRank() int32 {
	if o == nil || isNil(o.ToRank) {
		var ret int32
		return ret
	}
	return *o.ToRank
}

// GetToRankOk returns a tuple with the ToRank field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthorSearchRequest) GetToRankOk() (*int32, bool) {
	if o == nil || isNil(o.ToRank) {
    return nil, false
	}
	return o.ToRank, true
}

// HasToRank returns a boolean if a field has been set.
func (o *AuthorSearchRequest) HasToRank() bool {
	if o != nil && !isNil(o.ToRank) {
		return true
	}

	return false
}

// SetToRank gets a reference to the given int32 and assigns it to the ToRank field.
func (o *AuthorSearchRequest) SetToRank(v int32) {
	o.ToRank = &v
}

// GetIsHeadline returns the IsHeadline field value if set, zero value otherwise.
func (o *AuthorSearchRequest) GetIsHeadline() bool {
	if o == nil || isNil(o.IsHeadline) {
		var ret bool
		return ret
	}
	return *o.IsHeadline
}

// GetIsHeadlineOk returns a tuple with the IsHeadline field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthorSearchRequest) GetIsHeadlineOk() (*bool, bool) {
	if o == nil || isNil(o.IsHeadline) {
    return nil, false
	}
	return o.IsHeadline, true
}

// HasIsHeadline returns a boolean if a field has been set.
func (o *AuthorSearchRequest) HasIsHeadline() bool {
	if o != nil && !isNil(o.IsHeadline) {
		return true
	}

	return false
}

// SetIsHeadline gets a reference to the given bool and assigns it to the IsHeadline field.
func (o *AuthorSearchRequest) SetIsHeadline(v bool) {
	o.IsHeadline = &v
}

// GetIsOpinion returns the IsOpinion field value if set, zero value otherwise.
func (o *AuthorSearchRequest) GetIsOpinion() bool {
	if o == nil || isNil(o.IsOpinion) {
		var ret bool
		return ret
	}
	return *o.IsOpinion
}

// GetIsOpinionOk returns a tuple with the IsOpinion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthorSearchRequest) GetIsOpinionOk() (*bool, bool) {
	if o == nil || isNil(o.IsOpinion) {
    return nil, false
	}
	return o.IsOpinion, true
}

// HasIsOpinion returns a boolean if a field has been set.
func (o *AuthorSearchRequest) HasIsOpinion() bool {
	if o != nil && !isNil(o.IsOpinion) {
		return true
	}

	return false
}

// SetIsOpinion gets a reference to the given bool and assigns it to the IsOpinion field.
func (o *AuthorSearchRequest) SetIsOpinion(v bool) {
	o.IsOpinion = &v
}

// GetIsPaidContent returns the IsPaidContent field value if set, zero value otherwise.
func (o *AuthorSearchRequest) GetIsPaidContent() bool {
	if o == nil || isNil(o.IsPaidContent) {
		var ret bool
		return ret
	}
	return *o.IsPaidContent
}

// GetIsPaidContentOk returns a tuple with the IsPaidContent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthorSearchRequest) GetIsPaidContentOk() (*bool, bool) {
	if o == nil || isNil(o.IsPaidContent) {
    return nil, false
	}
	return o.IsPaidContent, true
}

// HasIsPaidContent returns a boolean if a field has been set.
func (o *AuthorSearchRequest) HasIsPaidContent() bool {
	if o != nil && !isNil(o.IsPaidContent) {
		return true
	}

	return false
}

// SetIsPaidContent gets a reference to the given bool and assigns it to the IsPaidContent field.
func (o *AuthorSearchRequest) SetIsPaidContent(v bool) {
	o.IsPaidContent = &v
}

// GetParentUrl returns the ParentUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AuthorSearchRequest) GetParentUrl() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.ParentUrl
}

// GetParentUrlOk returns a tuple with the ParentUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AuthorSearchRequest) GetParentUrlOk() (*interface{}, bool) {
	if o == nil || isNil(o.ParentUrl) {
    return nil, false
	}
	return &o.ParentUrl, true
}

// HasParentUrl returns a boolean if a field has been set.
func (o *AuthorSearchRequest) HasParentUrl() bool {
	if o != nil && isNil(o.ParentUrl) {
		return true
	}

	return false
}

// SetParentUrl gets a reference to the given interface{} and assigns it to the ParentUrl field.
func (o *AuthorSearchRequest) SetParentUrl(v interface{}) {
	o.ParentUrl = v
}

// GetAllLinks returns the AllLinks field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AuthorSearchRequest) GetAllLinks() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.AllLinks
}

// GetAllLinksOk returns a tuple with the AllLinks field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AuthorSearchRequest) GetAllLinksOk() (*interface{}, bool) {
	if o == nil || isNil(o.AllLinks) {
    return nil, false
	}
	return &o.AllLinks, true
}

// HasAllLinks returns a boolean if a field has been set.
func (o *AuthorSearchRequest) HasAllLinks() bool {
	if o != nil && isNil(o.AllLinks) {
		return true
	}

	return false
}

// SetAllLinks gets a reference to the given interface{} and assigns it to the AllLinks field.
func (o *AuthorSearchRequest) SetAllLinks(v interface{}) {
	o.AllLinks = v
}

// GetAllDomainLinks returns the AllDomainLinks field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AuthorSearchRequest) GetAllDomainLinks() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.AllDomainLinks
}

// GetAllDomainLinksOk returns a tuple with the AllDomainLinks field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AuthorSearchRequest) GetAllDomainLinksOk() (*interface{}, bool) {
	if o == nil || isNil(o.AllDomainLinks) {
    return nil, false
	}
	return &o.AllDomainLinks, true
}

// HasAllDomainLinks returns a boolean if a field has been set.
func (o *AuthorSearchRequest) HasAllDomainLinks() bool {
	if o != nil && isNil(o.AllDomainLinks) {
		return true
	}

	return false
}

// SetAllDomainLinks gets a reference to the given interface{} and assigns it to the AllDomainLinks field.
func (o *AuthorSearchRequest) SetAllDomainLinks(v interface{}) {
	o.AllDomainLinks = v
}

// GetWordCountMin returns the WordCountMin field value if set, zero value otherwise.
func (o *AuthorSearchRequest) GetWordCountMin() int32 {
	if o == nil || isNil(o.WordCountMin) {
		var ret int32
		return ret
	}
	return *o.WordCountMin
}

// GetWordCountMinOk returns a tuple with the WordCountMin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthorSearchRequest) GetWordCountMinOk() (*int32, bool) {
	if o == nil || isNil(o.WordCountMin) {
    return nil, false
	}
	return o.WordCountMin, true
}

// HasWordCountMin returns a boolean if a field has been set.
func (o *AuthorSearchRequest) HasWordCountMin() bool {
	if o != nil && !isNil(o.WordCountMin) {
		return true
	}

	return false
}

// SetWordCountMin gets a reference to the given int32 and assigns it to the WordCountMin field.
func (o *AuthorSearchRequest) SetWordCountMin(v int32) {
	o.WordCountMin = &v
}

// GetWordCountMax returns the WordCountMax field value if set, zero value otherwise.
func (o *AuthorSearchRequest) GetWordCountMax() int32 {
	if o == nil || isNil(o.WordCountMax) {
		var ret int32
		return ret
	}
	return *o.WordCountMax
}

// GetWordCountMaxOk returns a tuple with the WordCountMax field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthorSearchRequest) GetWordCountMaxOk() (*int32, bool) {
	if o == nil || isNil(o.WordCountMax) {
    return nil, false
	}
	return o.WordCountMax, true
}

// HasWordCountMax returns a boolean if a field has been set.
func (o *AuthorSearchRequest) HasWordCountMax() bool {
	if o != nil && !isNil(o.WordCountMax) {
		return true
	}

	return false
}

// SetWordCountMax gets a reference to the given int32 and assigns it to the WordCountMax field.
func (o *AuthorSearchRequest) SetWordCountMax(v int32) {
	o.WordCountMax = &v
}

// GetPage returns the Page field value if set, zero value otherwise.
func (o *AuthorSearchRequest) GetPage() int32 {
	if o == nil || isNil(o.Page) {
		var ret int32
		return ret
	}
	return *o.Page
}

// GetPageOk returns a tuple with the Page field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthorSearchRequest) GetPageOk() (*int32, bool) {
	if o == nil || isNil(o.Page) {
    return nil, false
	}
	return o.Page, true
}

// HasPage returns a boolean if a field has been set.
func (o *AuthorSearchRequest) HasPage() bool {
	if o != nil && !isNil(o.Page) {
		return true
	}

	return false
}

// SetPage gets a reference to the given int32 and assigns it to the Page field.
func (o *AuthorSearchRequest) SetPage(v int32) {
	o.Page = &v
}

// GetPageSize returns the PageSize field value if set, zero value otherwise.
func (o *AuthorSearchRequest) GetPageSize() int32 {
	if o == nil || isNil(o.PageSize) {
		var ret int32
		return ret
	}
	return *o.PageSize
}

// GetPageSizeOk returns a tuple with the PageSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthorSearchRequest) GetPageSizeOk() (*int32, bool) {
	if o == nil || isNil(o.PageSize) {
    return nil, false
	}
	return o.PageSize, true
}

// HasPageSize returns a boolean if a field has been set.
func (o *AuthorSearchRequest) HasPageSize() bool {
	if o != nil && !isNil(o.PageSize) {
		return true
	}

	return false
}

// SetPageSize gets a reference to the given int32 and assigns it to the PageSize field.
func (o *AuthorSearchRequest) SetPageSize(v int32) {
	o.PageSize = &v
}

// GetIncludeNlpData returns the IncludeNlpData field value if set, zero value otherwise.
func (o *AuthorSearchRequest) GetIncludeNlpData() bool {
	if o == nil || isNil(o.IncludeNlpData) {
		var ret bool
		return ret
	}
	return *o.IncludeNlpData
}

// GetIncludeNlpDataOk returns a tuple with the IncludeNlpData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthorSearchRequest) GetIncludeNlpDataOk() (*bool, bool) {
	if o == nil || isNil(o.IncludeNlpData) {
    return nil, false
	}
	return o.IncludeNlpData, true
}

// HasIncludeNlpData returns a boolean if a field has been set.
func (o *AuthorSearchRequest) HasIncludeNlpData() bool {
	if o != nil && !isNil(o.IncludeNlpData) {
		return true
	}

	return false
}

// SetIncludeNlpData gets a reference to the given bool and assigns it to the IncludeNlpData field.
func (o *AuthorSearchRequest) SetIncludeNlpData(v bool) {
	o.IncludeNlpData = &v
}

// GetHasNlp returns the HasNlp field value if set, zero value otherwise.
func (o *AuthorSearchRequest) GetHasNlp() bool {
	if o == nil || isNil(o.HasNlp) {
		var ret bool
		return ret
	}
	return *o.HasNlp
}

// GetHasNlpOk returns a tuple with the HasNlp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthorSearchRequest) GetHasNlpOk() (*bool, bool) {
	if o == nil || isNil(o.HasNlp) {
    return nil, false
	}
	return o.HasNlp, true
}

// HasHasNlp returns a boolean if a field has been set.
func (o *AuthorSearchRequest) HasHasNlp() bool {
	if o != nil && !isNil(o.HasNlp) {
		return true
	}

	return false
}

// SetHasNlp gets a reference to the given bool and assigns it to the HasNlp field.
func (o *AuthorSearchRequest) SetHasNlp(v bool) {
	o.HasNlp = &v
}

// GetTheme returns the Theme field value if set, zero value otherwise.
func (o *AuthorSearchRequest) GetTheme() string {
	if o == nil || isNil(o.Theme) {
		var ret string
		return ret
	}
	return *o.Theme
}

// GetThemeOk returns a tuple with the Theme field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthorSearchRequest) GetThemeOk() (*string, bool) {
	if o == nil || isNil(o.Theme) {
    return nil, false
	}
	return o.Theme, true
}

// HasTheme returns a boolean if a field has been set.
func (o *AuthorSearchRequest) HasTheme() bool {
	if o != nil && !isNil(o.Theme) {
		return true
	}

	return false
}

// SetTheme gets a reference to the given string and assigns it to the Theme field.
func (o *AuthorSearchRequest) SetTheme(v string) {
	o.Theme = &v
}

// GetNotTheme returns the NotTheme field value if set, zero value otherwise.
func (o *AuthorSearchRequest) GetNotTheme() string {
	if o == nil || isNil(o.NotTheme) {
		var ret string
		return ret
	}
	return *o.NotTheme
}

// GetNotThemeOk returns a tuple with the NotTheme field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthorSearchRequest) GetNotThemeOk() (*string, bool) {
	if o == nil || isNil(o.NotTheme) {
    return nil, false
	}
	return o.NotTheme, true
}

// HasNotTheme returns a boolean if a field has been set.
func (o *AuthorSearchRequest) HasNotTheme() bool {
	if o != nil && !isNil(o.NotTheme) {
		return true
	}

	return false
}

// SetNotTheme gets a reference to the given string and assigns it to the NotTheme field.
func (o *AuthorSearchRequest) SetNotTheme(v string) {
	o.NotTheme = &v
}

// GetNerName returns the NerName field value if set, zero value otherwise.
func (o *AuthorSearchRequest) GetNerName() string {
	if o == nil || isNil(o.NerName) {
		var ret string
		return ret
	}
	return *o.NerName
}

// GetNerNameOk returns a tuple with the NerName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthorSearchRequest) GetNerNameOk() (*string, bool) {
	if o == nil || isNil(o.NerName) {
    return nil, false
	}
	return o.NerName, true
}

// HasNerName returns a boolean if a field has been set.
func (o *AuthorSearchRequest) HasNerName() bool {
	if o != nil && !isNil(o.NerName) {
		return true
	}

	return false
}

// SetNerName gets a reference to the given string and assigns it to the NerName field.
func (o *AuthorSearchRequest) SetNerName(v string) {
	o.NerName = &v
}

// GetTitleSentimentMin returns the TitleSentimentMin field value if set, zero value otherwise.
func (o *AuthorSearchRequest) GetTitleSentimentMin() float32 {
	if o == nil || isNil(o.TitleSentimentMin) {
		var ret float32
		return ret
	}
	return *o.TitleSentimentMin
}

// GetTitleSentimentMinOk returns a tuple with the TitleSentimentMin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthorSearchRequest) GetTitleSentimentMinOk() (*float32, bool) {
	if o == nil || isNil(o.TitleSentimentMin) {
    return nil, false
	}
	return o.TitleSentimentMin, true
}

// HasTitleSentimentMin returns a boolean if a field has been set.
func (o *AuthorSearchRequest) HasTitleSentimentMin() bool {
	if o != nil && !isNil(o.TitleSentimentMin) {
		return true
	}

	return false
}

// SetTitleSentimentMin gets a reference to the given float32 and assigns it to the TitleSentimentMin field.
func (o *AuthorSearchRequest) SetTitleSentimentMin(v float32) {
	o.TitleSentimentMin = &v
}

// GetTitleSentimentMax returns the TitleSentimentMax field value if set, zero value otherwise.
func (o *AuthorSearchRequest) GetTitleSentimentMax() float32 {
	if o == nil || isNil(o.TitleSentimentMax) {
		var ret float32
		return ret
	}
	return *o.TitleSentimentMax
}

// GetTitleSentimentMaxOk returns a tuple with the TitleSentimentMax field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthorSearchRequest) GetTitleSentimentMaxOk() (*float32, bool) {
	if o == nil || isNil(o.TitleSentimentMax) {
    return nil, false
	}
	return o.TitleSentimentMax, true
}

// HasTitleSentimentMax returns a boolean if a field has been set.
func (o *AuthorSearchRequest) HasTitleSentimentMax() bool {
	if o != nil && !isNil(o.TitleSentimentMax) {
		return true
	}

	return false
}

// SetTitleSentimentMax gets a reference to the given float32 and assigns it to the TitleSentimentMax field.
func (o *AuthorSearchRequest) SetTitleSentimentMax(v float32) {
	o.TitleSentimentMax = &v
}

// GetContentSentimentMin returns the ContentSentimentMin field value if set, zero value otherwise.
func (o *AuthorSearchRequest) GetContentSentimentMin() float32 {
	if o == nil || isNil(o.ContentSentimentMin) {
		var ret float32
		return ret
	}
	return *o.ContentSentimentMin
}

// GetContentSentimentMinOk returns a tuple with the ContentSentimentMin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthorSearchRequest) GetContentSentimentMinOk() (*float32, bool) {
	if o == nil || isNil(o.ContentSentimentMin) {
    return nil, false
	}
	return o.ContentSentimentMin, true
}

// HasContentSentimentMin returns a boolean if a field has been set.
func (o *AuthorSearchRequest) HasContentSentimentMin() bool {
	if o != nil && !isNil(o.ContentSentimentMin) {
		return true
	}

	return false
}

// SetContentSentimentMin gets a reference to the given float32 and assigns it to the ContentSentimentMin field.
func (o *AuthorSearchRequest) SetContentSentimentMin(v float32) {
	o.ContentSentimentMin = &v
}

// GetContentSentimentMax returns the ContentSentimentMax field value if set, zero value otherwise.
func (o *AuthorSearchRequest) GetContentSentimentMax() float32 {
	if o == nil || isNil(o.ContentSentimentMax) {
		var ret float32
		return ret
	}
	return *o.ContentSentimentMax
}

// GetContentSentimentMaxOk returns a tuple with the ContentSentimentMax field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthorSearchRequest) GetContentSentimentMaxOk() (*float32, bool) {
	if o == nil || isNil(o.ContentSentimentMax) {
    return nil, false
	}
	return o.ContentSentimentMax, true
}

// HasContentSentimentMax returns a boolean if a field has been set.
func (o *AuthorSearchRequest) HasContentSentimentMax() bool {
	if o != nil && !isNil(o.ContentSentimentMax) {
		return true
	}

	return false
}

// SetContentSentimentMax gets a reference to the given float32 and assigns it to the ContentSentimentMax field.
func (o *AuthorSearchRequest) SetContentSentimentMax(v float32) {
	o.ContentSentimentMax = &v
}

// GetIptcTags returns the IptcTags field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AuthorSearchRequest) GetIptcTags() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.IptcTags
}

// GetIptcTagsOk returns a tuple with the IptcTags field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AuthorSearchRequest) GetIptcTagsOk() (*interface{}, bool) {
	if o == nil || isNil(o.IptcTags) {
    return nil, false
	}
	return &o.IptcTags, true
}

// HasIptcTags returns a boolean if a field has been set.
func (o *AuthorSearchRequest) HasIptcTags() bool {
	if o != nil && isNil(o.IptcTags) {
		return true
	}

	return false
}

// SetIptcTags gets a reference to the given interface{} and assigns it to the IptcTags field.
func (o *AuthorSearchRequest) SetIptcTags(v interface{}) {
	o.IptcTags = v
}

// GetNotIptcTags returns the NotIptcTags field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AuthorSearchRequest) GetNotIptcTags() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.NotIptcTags
}

// GetNotIptcTagsOk returns a tuple with the NotIptcTags field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AuthorSearchRequest) GetNotIptcTagsOk() (*interface{}, bool) {
	if o == nil || isNil(o.NotIptcTags) {
    return nil, false
	}
	return &o.NotIptcTags, true
}

// HasNotIptcTags returns a boolean if a field has been set.
func (o *AuthorSearchRequest) HasNotIptcTags() bool {
	if o != nil && isNil(o.NotIptcTags) {
		return true
	}

	return false
}

// SetNotIptcTags gets a reference to the given interface{} and assigns it to the NotIptcTags field.
func (o *AuthorSearchRequest) SetNotIptcTags(v interface{}) {
	o.NotIptcTags = v
}

// GetIabTags returns the IabTags field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AuthorSearchRequest) GetIabTags() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.IabTags
}

// GetIabTagsOk returns a tuple with the IabTags field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AuthorSearchRequest) GetIabTagsOk() (*interface{}, bool) {
	if o == nil || isNil(o.IabTags) {
    return nil, false
	}
	return &o.IabTags, true
}

// HasIabTags returns a boolean if a field has been set.
func (o *AuthorSearchRequest) HasIabTags() bool {
	if o != nil && isNil(o.IabTags) {
		return true
	}

	return false
}

// SetIabTags gets a reference to the given interface{} and assigns it to the IabTags field.
func (o *AuthorSearchRequest) SetIabTags(v interface{}) {
	o.IabTags = v
}

// GetNotIabTags returns the NotIabTags field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AuthorSearchRequest) GetNotIabTags() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.NotIabTags
}

// GetNotIabTagsOk returns a tuple with the NotIabTags field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AuthorSearchRequest) GetNotIabTagsOk() (*interface{}, bool) {
	if o == nil || isNil(o.NotIabTags) {
    return nil, false
	}
	return &o.NotIabTags, true
}

// HasNotIabTags returns a boolean if a field has been set.
func (o *AuthorSearchRequest) HasNotIabTags() bool {
	if o != nil && isNil(o.NotIabTags) {
		return true
	}

	return false
}

// SetNotIabTags gets a reference to the given interface{} and assigns it to the NotIabTags field.
func (o *AuthorSearchRequest) SetNotIabTags(v interface{}) {
	o.NotIabTags = v
}

func (o AuthorSearchRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["author_name"] = o.AuthorName
	}
	if !isNil(o.NotAuthorName) {
		toSerialize["not_author_name"] = o.NotAuthorName
	}
	if o.Sources != nil {
		toSerialize["sources"] = o.Sources
	}
	if o.PredefinedSources != nil {
		toSerialize["predefined_sources"] = o.PredefinedSources
	}
	if o.NotSources != nil {
		toSerialize["not_sources"] = o.NotSources
	}
	if o.Lang != nil {
		toSerialize["lang"] = o.Lang
	}
	if o.NotLang != nil {
		toSerialize["not_lang"] = o.NotLang
	}
	if o.Countries != nil {
		toSerialize["countries"] = o.Countries
	}
	if o.NotCountries != nil {
		toSerialize["not_countries"] = o.NotCountries
	}
	if !isNil(o.From) {
		toSerialize["from_"] = o.From
	}
	if !isNil(o.To) {
		toSerialize["to_"] = o.To
	}
	if !isNil(o.PublishedDatePrecision) {
		toSerialize["published_date_precision"] = o.PublishedDatePrecision
	}
	if !isNil(o.ByParseDate) {
		toSerialize["by_parse_date"] = o.ByParseDate
	}
	if !isNil(o.SortBy) {
		toSerialize["sort_by"] = o.SortBy
	}
	if !isNil(o.RankedOnly) {
		toSerialize["ranked_only"] = o.RankedOnly
	}
	if !isNil(o.FromRank) {
		toSerialize["from_rank"] = o.FromRank
	}
	if !isNil(o.ToRank) {
		toSerialize["to_rank"] = o.ToRank
	}
	if !isNil(o.IsHeadline) {
		toSerialize["is_headline"] = o.IsHeadline
	}
	if !isNil(o.IsOpinion) {
		toSerialize["is_opinion"] = o.IsOpinion
	}
	if !isNil(o.IsPaidContent) {
		toSerialize["is_paid_content"] = o.IsPaidContent
	}
	if o.ParentUrl != nil {
		toSerialize["parent_url"] = o.ParentUrl
	}
	if o.AllLinks != nil {
		toSerialize["all_links"] = o.AllLinks
	}
	if o.AllDomainLinks != nil {
		toSerialize["all_domain_links"] = o.AllDomainLinks
	}
	if !isNil(o.WordCountMin) {
		toSerialize["word_count_min"] = o.WordCountMin
	}
	if !isNil(o.WordCountMax) {
		toSerialize["word_count_max"] = o.WordCountMax
	}
	if !isNil(o.Page) {
		toSerialize["page"] = o.Page
	}
	if !isNil(o.PageSize) {
		toSerialize["page_size"] = o.PageSize
	}
	if !isNil(o.IncludeNlpData) {
		toSerialize["include_nlp_data"] = o.IncludeNlpData
	}
	if !isNil(o.HasNlp) {
		toSerialize["has_nlp"] = o.HasNlp
	}
	if !isNil(o.Theme) {
		toSerialize["theme"] = o.Theme
	}
	if !isNil(o.NotTheme) {
		toSerialize["not_theme"] = o.NotTheme
	}
	if !isNil(o.NerName) {
		toSerialize["ner_name"] = o.NerName
	}
	if !isNil(o.TitleSentimentMin) {
		toSerialize["title_sentiment_min"] = o.TitleSentimentMin
	}
	if !isNil(o.TitleSentimentMax) {
		toSerialize["title_sentiment_max"] = o.TitleSentimentMax
	}
	if !isNil(o.ContentSentimentMin) {
		toSerialize["content_sentiment_min"] = o.ContentSentimentMin
	}
	if !isNil(o.ContentSentimentMax) {
		toSerialize["content_sentiment_max"] = o.ContentSentimentMax
	}
	if o.IptcTags != nil {
		toSerialize["iptc_tags"] = o.IptcTags
	}
	if o.NotIptcTags != nil {
		toSerialize["not_iptc_tags"] = o.NotIptcTags
	}
	if o.IabTags != nil {
		toSerialize["iab_tags"] = o.IabTags
	}
	if o.NotIabTags != nil {
		toSerialize["not_iab_tags"] = o.NotIabTags
	}
	return json.Marshal(toSerialize)
}

type NullableAuthorSearchRequest struct {
	value *AuthorSearchRequest
	isSet bool
}

func (v NullableAuthorSearchRequest) Get() *AuthorSearchRequest {
	return v.value
}

func (v *NullableAuthorSearchRequest) Set(val *AuthorSearchRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAuthorSearchRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAuthorSearchRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuthorSearchRequest(val *AuthorSearchRequest) *NullableAuthorSearchRequest {
	return &NullableAuthorSearchRequest{value: val, isSet: true}
}

func (v NullableAuthorSearchRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuthorSearchRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


