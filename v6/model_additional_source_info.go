/*
NewsCatcher-V3 Production API

<img src='https://uploads-ssl.webflow.com/6429857b17973b636c2195c5/646c6f1eb774ff2f2997bec5_newscatcher_.svg' width='286' height='35' /> <br>  <br>Visit our website  <a href='https://newscatcherapi.com'>https://newscatcherapi.com</a>

API version: 3.2.16
Contact: maksym@newscatcherapi.com
*/

// Code generated by Konfig (https://konfigthis.com); DO NOT EDIT.

package newscatcherapi

import (
	"encoding/json"
)

// AdditionalSourceInfo AdditionalSourceInfo DTO class.
type AdditionalSourceInfo struct {
	NbArticlesFor7d *int32 `json:"nb_articles_for_7d,omitempty"`
	Country *string `json:"country,omitempty"`
	Rank *int32 `json:"rank,omitempty"`
}

// NewAdditionalSourceInfo instantiates a new AdditionalSourceInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdditionalSourceInfo() *AdditionalSourceInfo {
	this := AdditionalSourceInfo{}
	return &this
}

// NewAdditionalSourceInfoWithDefaults instantiates a new AdditionalSourceInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdditionalSourceInfoWithDefaults() *AdditionalSourceInfo {
	this := AdditionalSourceInfo{}
	return &this
}

// GetNbArticlesFor7d returns the NbArticlesFor7d field value if set, zero value otherwise.
func (o *AdditionalSourceInfo) GetNbArticlesFor7d() int32 {
	if o == nil || isNil(o.NbArticlesFor7d) {
		var ret int32
		return ret
	}
	return *o.NbArticlesFor7d
}

// GetNbArticlesFor7dOk returns a tuple with the NbArticlesFor7d field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdditionalSourceInfo) GetNbArticlesFor7dOk() (*int32, bool) {
	if o == nil || isNil(o.NbArticlesFor7d) {
    return nil, false
	}
	return o.NbArticlesFor7d, true
}

// HasNbArticlesFor7d returns a boolean if a field has been set.
func (o *AdditionalSourceInfo) HasNbArticlesFor7d() bool {
	if o != nil && !isNil(o.NbArticlesFor7d) {
		return true
	}

	return false
}

// SetNbArticlesFor7d gets a reference to the given int32 and assigns it to the NbArticlesFor7d field.
func (o *AdditionalSourceInfo) SetNbArticlesFor7d(v int32) {
	o.NbArticlesFor7d = &v
}

// GetCountry returns the Country field value if set, zero value otherwise.
func (o *AdditionalSourceInfo) GetCountry() string {
	if o == nil || isNil(o.Country) {
		var ret string
		return ret
	}
	return *o.Country
}

// GetCountryOk returns a tuple with the Country field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdditionalSourceInfo) GetCountryOk() (*string, bool) {
	if o == nil || isNil(o.Country) {
    return nil, false
	}
	return o.Country, true
}

// HasCountry returns a boolean if a field has been set.
func (o *AdditionalSourceInfo) HasCountry() bool {
	if o != nil && !isNil(o.Country) {
		return true
	}

	return false
}

// SetCountry gets a reference to the given string and assigns it to the Country field.
func (o *AdditionalSourceInfo) SetCountry(v string) {
	o.Country = &v
}

// GetRank returns the Rank field value if set, zero value otherwise.
func (o *AdditionalSourceInfo) GetRank() int32 {
	if o == nil || isNil(o.Rank) {
		var ret int32
		return ret
	}
	return *o.Rank
}

// GetRankOk returns a tuple with the Rank field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdditionalSourceInfo) GetRankOk() (*int32, bool) {
	if o == nil || isNil(o.Rank) {
    return nil, false
	}
	return o.Rank, true
}

// HasRank returns a boolean if a field has been set.
func (o *AdditionalSourceInfo) HasRank() bool {
	if o != nil && !isNil(o.Rank) {
		return true
	}

	return false
}

// SetRank gets a reference to the given int32 and assigns it to the Rank field.
func (o *AdditionalSourceInfo) SetRank(v int32) {
	o.Rank = &v
}

func (o AdditionalSourceInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.NbArticlesFor7d) {
		toSerialize["nb_articles_for_7d"] = o.NbArticlesFor7d
	}
	if !isNil(o.Country) {
		toSerialize["country"] = o.Country
	}
	if !isNil(o.Rank) {
		toSerialize["rank"] = o.Rank
	}
	return json.Marshal(toSerialize)
}

type NullableAdditionalSourceInfo struct {
	value *AdditionalSourceInfo
	isSet bool
}

func (v NullableAdditionalSourceInfo) Get() *AdditionalSourceInfo {
	return v.value
}

func (v *NullableAdditionalSourceInfo) Set(val *AdditionalSourceInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableAdditionalSourceInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableAdditionalSourceInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdditionalSourceInfo(val *AdditionalSourceInfo) *NullableAdditionalSourceInfo {
	return &NullableAdditionalSourceInfo{value: val, isSet: true}
}

func (v NullableAdditionalSourceInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdditionalSourceInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


