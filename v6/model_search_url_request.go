/*
NewsCatcher-V3 Production API

<img src='https://uploads-ssl.webflow.com/6429857b17973b636c2195c5/646c6f1eb774ff2f2997bec5_newscatcher_.svg' width='286' height='35' /> <br>  <br>Visit our website  <a href='https://newscatcherapi.com'>https://newscatcherapi.com</a>

API version: 3.2.16
Contact: maksym@newscatcherapi.com
*/

// Code generated by Konfig (https://konfigthis.com); DO NOT EDIT.

package newscatcherapi

import (
	"encoding/json"
)

// SearchURLRequest Search URL Request DTO.
type SearchURLRequest struct {
	Ids interface{} `json:"ids,omitempty"`
	Links interface{} `json:"links,omitempty"`
	Page *int32 `json:"page,omitempty"`
	PageSize *int32 `json:"page_size,omitempty"`
}

// NewSearchURLRequest instantiates a new SearchURLRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSearchURLRequest() *SearchURLRequest {
	this := SearchURLRequest{}
	var page int32 = 1
	this.Page = &page
	var pageSize int32 = 100
	this.PageSize = &pageSize
	return &this
}

// NewSearchURLRequestWithDefaults instantiates a new SearchURLRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSearchURLRequestWithDefaults() *SearchURLRequest {
	this := SearchURLRequest{}
	var page int32 = 1
	this.Page = &page
	var pageSize int32 = 100
	this.PageSize = &pageSize
	return &this
}

// GetIds returns the Ids field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SearchURLRequest) GetIds() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Ids
}

// GetIdsOk returns a tuple with the Ids field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SearchURLRequest) GetIdsOk() (*interface{}, bool) {
	if o == nil || isNil(o.Ids) {
    return nil, false
	}
	return &o.Ids, true
}

// HasIds returns a boolean if a field has been set.
func (o *SearchURLRequest) HasIds() bool {
	if o != nil && isNil(o.Ids) {
		return true
	}

	return false
}

// SetIds gets a reference to the given interface{} and assigns it to the Ids field.
func (o *SearchURLRequest) SetIds(v interface{}) {
	o.Ids = v
}

// GetLinks returns the Links field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SearchURLRequest) GetLinks() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SearchURLRequest) GetLinksOk() (*interface{}, bool) {
	if o == nil || isNil(o.Links) {
    return nil, false
	}
	return &o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *SearchURLRequest) HasLinks() bool {
	if o != nil && isNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given interface{} and assigns it to the Links field.
func (o *SearchURLRequest) SetLinks(v interface{}) {
	o.Links = v
}

// GetPage returns the Page field value if set, zero value otherwise.
func (o *SearchURLRequest) GetPage() int32 {
	if o == nil || isNil(o.Page) {
		var ret int32
		return ret
	}
	return *o.Page
}

// GetPageOk returns a tuple with the Page field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchURLRequest) GetPageOk() (*int32, bool) {
	if o == nil || isNil(o.Page) {
    return nil, false
	}
	return o.Page, true
}

// HasPage returns a boolean if a field has been set.
func (o *SearchURLRequest) HasPage() bool {
	if o != nil && !isNil(o.Page) {
		return true
	}

	return false
}

// SetPage gets a reference to the given int32 and assigns it to the Page field.
func (o *SearchURLRequest) SetPage(v int32) {
	o.Page = &v
}

// GetPageSize returns the PageSize field value if set, zero value otherwise.
func (o *SearchURLRequest) GetPageSize() int32 {
	if o == nil || isNil(o.PageSize) {
		var ret int32
		return ret
	}
	return *o.PageSize
}

// GetPageSizeOk returns a tuple with the PageSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchURLRequest) GetPageSizeOk() (*int32, bool) {
	if o == nil || isNil(o.PageSize) {
    return nil, false
	}
	return o.PageSize, true
}

// HasPageSize returns a boolean if a field has been set.
func (o *SearchURLRequest) HasPageSize() bool {
	if o != nil && !isNil(o.PageSize) {
		return true
	}

	return false
}

// SetPageSize gets a reference to the given int32 and assigns it to the PageSize field.
func (o *SearchURLRequest) SetPageSize(v int32) {
	o.PageSize = &v
}

func (o SearchURLRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Ids != nil {
		toSerialize["ids"] = o.Ids
	}
	if o.Links != nil {
		toSerialize["links"] = o.Links
	}
	if !isNil(o.Page) {
		toSerialize["page"] = o.Page
	}
	if !isNil(o.PageSize) {
		toSerialize["page_size"] = o.PageSize
	}
	return json.Marshal(toSerialize)
}

type NullableSearchURLRequest struct {
	value *SearchURLRequest
	isSet bool
}

func (v NullableSearchURLRequest) Get() *SearchURLRequest {
	return v.value
}

func (v *NullableSearchURLRequest) Set(val *SearchURLRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSearchURLRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSearchURLRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSearchURLRequest(val *SearchURLRequest) *NullableSearchURLRequest {
	return &NullableSearchURLRequest{value: val, isSet: true}
}

func (v NullableSearchURLRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSearchURLRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


