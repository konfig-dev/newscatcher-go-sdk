/*
NewsCatcher-V3 Production API

<img src='https://uploads-ssl.webflow.com/6429857b17973b636c2195c5/646c6f1eb774ff2f2997bec5_newscatcher_.svg' width='286' height='35' /> <br>  <br>Visit our website  <a href='https://newscatcherapi.com'>https://newscatcherapi.com</a>

API version: 3.2.16
Contact: maksym@newscatcherapi.com
*/

// Code generated by Konfig (https://konfigthis.com); DO NOT EDIT.

package newscatcherapi

import (
	"encoding/json"
	"fmt"
)

// SourcesPropertyInner struct for SourcesPropertyInner
type SourcesPropertyInner struct {
	SourceInfo *SourceInfo
	String *string
}

// Unmarshal JSON data into any of the pointers in the struct
func (dst *SourcesPropertyInner) UnmarshalJSON(data []byte) error {
	var err error
	// try to unmarshal JSON data into SourceInfo
	err = json.Unmarshal(data, &dst.SourceInfo);
	if err == nil {
		jsonSourceInfo, _ := json.Marshal(dst.SourceInfo)
		if string(jsonSourceInfo) == "{}" { // empty struct
			dst.SourceInfo = nil
		} else {
			return nil // data stored in dst.SourceInfo, return on the first match
		}
	} else {
		dst.SourceInfo = nil
	}

	// try to unmarshal JSON data into string
	err = json.Unmarshal(data, &dst.String);
	if err == nil {
		jsonString, _ := json.Marshal(dst.String)
		if string(jsonString) == "{}" { // empty struct
			dst.String = nil
		} else {
			return nil // data stored in dst.String, return on the first match
		}
	} else {
		dst.String = nil
	}

	return fmt.Errorf("data failed to match schemas in anyOf(SourcesPropertyInner)")
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src *SourcesPropertyInner) MarshalJSON() ([]byte, error) {
	if src.SourceInfo != nil {
		return json.Marshal(&src.SourceInfo)
	}

	if src.String != nil {
		return json.Marshal(&src.String)
	}

	return nil, nil // no data in anyOf schemas
}

type NullableSourcesPropertyInner struct {
	value *SourcesPropertyInner
	isSet bool
}

func (v NullableSourcesPropertyInner) Get() *SourcesPropertyInner {
	return v.value
}

func (v *NullableSourcesPropertyInner) Set(val *SourcesPropertyInner) {
	v.value = val
	v.isSet = true
}

func (v NullableSourcesPropertyInner) IsSet() bool {
	return v.isSet
}

func (v *NullableSourcesPropertyInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSourcesPropertyInner(val *SourcesPropertyInner) *NullableSourcesPropertyInner {
	return &NullableSourcesPropertyInner{value: val, isSet: true}
}

func (v NullableSourcesPropertyInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSourcesPropertyInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


