/*
NewsCatcher-V3 Production API

<img src='https://uploads-ssl.webflow.com/6429857b17973b636c2195c5/646c6f1eb774ff2f2997bec5_newscatcher_.svg' width='286' height='35' /> <br>  <br>Visit our website  <a href='https://newscatcherapi.com'>https://newscatcherapi.com</a>

API version: 3.2.16
Contact: maksym@newscatcherapi.com
*/

// Code generated by Konfig (https://konfigthis.com); DO NOT EDIT.

package newscatcherapi

import (
	"encoding/json"
)

// DuplicatesByOriginalIdRequest Duplicates by original article ID request DTO
type DuplicatesByOriginalIdRequest struct {
	OriginalArticleId string `json:"original_article_id"`
	Page *int32 `json:"page,omitempty"`
	PageSize *int32 `json:"page_size,omitempty"`
}

// NewDuplicatesByOriginalIdRequest instantiates a new DuplicatesByOriginalIdRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDuplicatesByOriginalIdRequest(originalArticleId string) *DuplicatesByOriginalIdRequest {
	this := DuplicatesByOriginalIdRequest{}
	this.OriginalArticleId = originalArticleId
	var page int32 = 1
	this.Page = &page
	var pageSize int32 = 100
	this.PageSize = &pageSize
	return &this
}

// NewDuplicatesByOriginalIdRequestWithDefaults instantiates a new DuplicatesByOriginalIdRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDuplicatesByOriginalIdRequestWithDefaults() *DuplicatesByOriginalIdRequest {
	this := DuplicatesByOriginalIdRequest{}
	var page int32 = 1
	this.Page = &page
	var pageSize int32 = 100
	this.PageSize = &pageSize
	return &this
}

// GetOriginalArticleId returns the OriginalArticleId field value
func (o *DuplicatesByOriginalIdRequest) GetOriginalArticleId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OriginalArticleId
}

// GetOriginalArticleIdOk returns a tuple with the OriginalArticleId field value
// and a boolean to check if the value has been set.
func (o *DuplicatesByOriginalIdRequest) GetOriginalArticleIdOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.OriginalArticleId, true
}

// SetOriginalArticleId sets field value
func (o *DuplicatesByOriginalIdRequest) SetOriginalArticleId(v string) {
	o.OriginalArticleId = v
}

// GetPage returns the Page field value if set, zero value otherwise.
func (o *DuplicatesByOriginalIdRequest) GetPage() int32 {
	if o == nil || isNil(o.Page) {
		var ret int32
		return ret
	}
	return *o.Page
}

// GetPageOk returns a tuple with the Page field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DuplicatesByOriginalIdRequest) GetPageOk() (*int32, bool) {
	if o == nil || isNil(o.Page) {
    return nil, false
	}
	return o.Page, true
}

// HasPage returns a boolean if a field has been set.
func (o *DuplicatesByOriginalIdRequest) HasPage() bool {
	if o != nil && !isNil(o.Page) {
		return true
	}

	return false
}

// SetPage gets a reference to the given int32 and assigns it to the Page field.
func (o *DuplicatesByOriginalIdRequest) SetPage(v int32) {
	o.Page = &v
}

// GetPageSize returns the PageSize field value if set, zero value otherwise.
func (o *DuplicatesByOriginalIdRequest) GetPageSize() int32 {
	if o == nil || isNil(o.PageSize) {
		var ret int32
		return ret
	}
	return *o.PageSize
}

// GetPageSizeOk returns a tuple with the PageSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DuplicatesByOriginalIdRequest) GetPageSizeOk() (*int32, bool) {
	if o == nil || isNil(o.PageSize) {
    return nil, false
	}
	return o.PageSize, true
}

// HasPageSize returns a boolean if a field has been set.
func (o *DuplicatesByOriginalIdRequest) HasPageSize() bool {
	if o != nil && !isNil(o.PageSize) {
		return true
	}

	return false
}

// SetPageSize gets a reference to the given int32 and assigns it to the PageSize field.
func (o *DuplicatesByOriginalIdRequest) SetPageSize(v int32) {
	o.PageSize = &v
}

func (o DuplicatesByOriginalIdRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["original_article_id"] = o.OriginalArticleId
	}
	if !isNil(o.Page) {
		toSerialize["page"] = o.Page
	}
	if !isNil(o.PageSize) {
		toSerialize["page_size"] = o.PageSize
	}
	return json.Marshal(toSerialize)
}

type NullableDuplicatesByOriginalIdRequest struct {
	value *DuplicatesByOriginalIdRequest
	isSet bool
}

func (v NullableDuplicatesByOriginalIdRequest) Get() *DuplicatesByOriginalIdRequest {
	return v.value
}

func (v *NullableDuplicatesByOriginalIdRequest) Set(val *DuplicatesByOriginalIdRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDuplicatesByOriginalIdRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDuplicatesByOriginalIdRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDuplicatesByOriginalIdRequest(val *DuplicatesByOriginalIdRequest) *NullableDuplicatesByOriginalIdRequest {
	return &NullableDuplicatesByOriginalIdRequest{value: val, isSet: true}
}

func (v NullableDuplicatesByOriginalIdRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDuplicatesByOriginalIdRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


