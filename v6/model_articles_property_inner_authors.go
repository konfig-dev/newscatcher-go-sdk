/*
NewsCatcher-V3 Production API

<img src='https://uploads-ssl.webflow.com/6429857b17973b636c2195c5/646c6f1eb774ff2f2997bec5_newscatcher_.svg' width='286' height='35' /> <br>  <br>Visit our website  <a href='https://newscatcherapi.com'>https://newscatcherapi.com</a>

API version: 3.2.16
Contact: maksym@newscatcherapi.com
*/

// Code generated by Konfig (https://konfigthis.com); DO NOT EDIT.

package newscatcherapi

import (
	"encoding/json"
	"fmt"
)

// ArticlesPropertyInnerAuthors - struct for ArticlesPropertyInnerAuthors
type ArticlesPropertyInnerAuthors struct {
	AuthorsProperty *AuthorsProperty
}

// AuthorsPropertyAsArticlesPropertyInnerAuthors is a convenience function that returns AuthorsProperty wrapped in ArticlesPropertyInnerAuthors
func AuthorsPropertyAsArticlesPropertyInnerAuthors(v *AuthorsProperty) ArticlesPropertyInnerAuthors {
	return ArticlesPropertyInnerAuthors{
		AuthorsProperty: v,
	}
}


// Unmarshal JSON data into one of the pointers in the struct
func (dst *ArticlesPropertyInnerAuthors) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into AuthorsProperty
	err = newStrictDecoder(data).Decode(&dst.AuthorsProperty)
	if err == nil {
		jsonAuthorsProperty, _ := json.Marshal(dst.AuthorsProperty)
		if string(jsonAuthorsProperty) == "{}" { // empty struct
			dst.AuthorsProperty = nil
		} else {
			match++
		}
	} else {
		dst.AuthorsProperty = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.AuthorsProperty = nil

		return fmt.Errorf("data matches more than one schema in oneOf(ArticlesPropertyInnerAuthors)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(ArticlesPropertyInnerAuthors)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src ArticlesPropertyInnerAuthors) MarshalJSON() ([]byte, error) {
	if src.AuthorsProperty != nil {
		return json.Marshal(&src.AuthorsProperty)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *ArticlesPropertyInnerAuthors) GetActualInstance() (interface{}) {
	if obj == nil {
		return nil
	}
	if obj.AuthorsProperty != nil {
		return obj.AuthorsProperty
	}

	// all schemas are nil
	return nil
}

type NullableArticlesPropertyInnerAuthors struct {
	value *ArticlesPropertyInnerAuthors
	isSet bool
}

func (v NullableArticlesPropertyInnerAuthors) Get() *ArticlesPropertyInnerAuthors {
	return v.value
}

func (v *NullableArticlesPropertyInnerAuthors) Set(val *ArticlesPropertyInnerAuthors) {
	v.value = val
	v.isSet = true
}

func (v NullableArticlesPropertyInnerAuthors) IsSet() bool {
	return v.isSet
}

func (v *NullableArticlesPropertyInnerAuthors) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableArticlesPropertyInnerAuthors(val *ArticlesPropertyInnerAuthors) *NullableArticlesPropertyInnerAuthors {
	return &NullableArticlesPropertyInnerAuthors{value: val, isSet: true}
}

func (v NullableArticlesPropertyInnerAuthors) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableArticlesPropertyInnerAuthors) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


